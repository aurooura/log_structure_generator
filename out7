===============ARQUIVO.CPP ====================

#define ACTIVE_LOG_C470 1
#define AUX_LOG_C470 AP::logger().Write_controlMagYawReset470(\
	log_yawInnovAtLastMagReset_out, \
	log_posDownAtLastMagReset_out, \
	log_quatAtLastMagReset_q1_out, \
	log_quatAtLastMagReset_q2_out, \
	log_quatAtLastMagReset_q3_out, \
	log_quatAtLastMagReset_q4_out, \
	log_magStateInitComplete_out, \
	log_gpsYawResetRequest_out)


ATRIBUICAO PARA OS #if E #endif

	float log_yawInnovAtLastMagReset_out = yawInnovAtLastMagReset.out;
	float log_posDownAtLastMagReset_out = posDownAtLastMagReset.out;
	float log_quatAtLastMagReset_q1_out = quatAtLastMagReset.q1.out;
	float log_quatAtLastMagReset_q2_out = quatAtLastMagReset.q2.out;
	float log_quatAtLastMagReset_q3_out = quatAtLastMagReset.q3.out;
	float log_quatAtLastMagReset_q4_out = quatAtLastMagReset.q4.out;
	uint8_t log_magStateInitComplete_out = magStateInitComplete.out;
	uint8_t log_gpsYawResetRequest_out = gpsYawResetRequest.out;
	AUX_LOG_C470;



=============== XMOBOTS_LOGS.H ====================

#define LOG_C470_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_C470), "C470",\
	"QffffffBB","t,1,2,3,4,5,6,7,8","s--------","F00000000"}

struct PACKED log_C470 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float yawInnovAtLastMagReset_out;
	float posDownAtLastMagReset_out;
	float quatAtLastMagReset_q1_out;
	float quatAtLastMagReset_q2_out;
	float quatAtLastMagReset_q3_out;
	float quatAtLastMagReset_q4_out;
	uint8_t magStateInitComplete_out;
	uint8_t gpsYawResetRequest_out;
};

=============== AP_LOGGER_H====================

void Write_controlMagYawReset470(float yawInnovAtLastMagReset_out,float posDownAtLastMagReset_out,float quatAtLastMagReset_q1_out,float quatAtLastMagReset_q2_out,float quatAtLastMagReset_q3_out,float quatAtLastMagReset_q4_out,uint8_t magStateInitComplete_out,uint8_t gpsYawResetRequest_out);


===============LOG_STRUCTURE.H=======================
NAO ESQUECER O SHOULD_LOG_EKF!!!!!

LOG_C470,
LOG_C470_BASE(LOG_C470),\


===============LOG_FILE_CPP====================

void AP_Logger::Write_controlMagYawReset470(
	float yawInnovAtLastMagReset_out,
	float posDownAtLastMagReset_out,
	float quatAtLastMagReset_q1_out,
	float quatAtLastMagReset_q2_out,
	float quatAtLastMagReset_q3_out,
	float quatAtLastMagReset_q4_out,
	uint8_t magStateInitComplete_out,
	uint8_t gpsYawResetRequest_out)
{
	struct log_C470 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_C470),
		time_us : AP_HAL::micros64(),
		yawInnovAtLastMagReset_out : yawInnovAtLastMagReset_out,
		posDownAtLastMagReset_out : posDownAtLastMagReset_out,
		quatAtLastMagReset_q1_out : quatAtLastMagReset_q1_out,
		quatAtLastMagReset_q2_out : quatAtLastMagReset_q2_out,
		quatAtLastMagReset_q3_out : quatAtLastMagReset_q3_out,
		quatAtLastMagReset_q4_out : quatAtLastMagReset_q4_out,
		magStateInitComplete_out : magStateInitComplete_out,
		gpsYawResetRequest_out : gpsYawResetRequest_out
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

--------------------------------------------------------------


PARTE DO MATLAB, ALIMENTAR O WORKSPACE COM VARIAVEIS LOGADAS CONVERT_MODELO_LOGS.M

	C470_time = 1e-6*C470(:,2);
	yawInnovAtLastMagReset_out = [C470_time, C470(:,3)];
	posDownAtLastMagReset_out = [C470_time, C470(:,4)];
	quatAtLastMagReset_q1_out = [C470_time, C470(:,5)];
	quatAtLastMagReset_q2_out = [C470_time, C470(:,6)];
	quatAtLastMagReset_q3_out = [C470_time, C470(:,7)];
	quatAtLastMagReset_q4_out = [C470_time, C470(:,8)];
	magStateInitComplete_out = [C470_time, C470(:,9)];
	gpsYawResetRequest_out = [C470_time, C470(:,10)];


