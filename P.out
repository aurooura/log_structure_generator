===============ARQUIVO.CPP ====================

#define ACTIVE_LOG_SM_29 1
#define AUX_LOG_SM_29 AP::logger().Write_setWindMagStateLearningMode7(\
	log_P_0_0, \
	log_P_0_1, \
	log_P_0_2, \
	log_P_0_3, \
	log_P_0_4, \
	log_P_0_5, \
	log_P_0_6, \
	log_P_0_7, \
	log_P_0_8, \
	log_P_0_9, \
	log_P_0_10, \
	log_P_0_11, \
	log_P_0_12, \
	log_P_0_13, \
	log_P_0_14)


#define ACTIVE_LOG_SM_30 1
#define AUX_LOG_SM_30 AP::logger().Write_setWindMagStateLearningMode8(\
	log_P_0_15, \
	log_P_0_16, \
	log_P_0_17, \
	log_P_0_18, \
	log_P_0_19, \
	log_P_0_20, \
	log_P_0_21, \
	log_P_0_22, \
	log_P_0_23, \
	log_P_1_0, \
	log_P_1_1, \
	log_P_1_2, \
	log_P_1_3, \
	log_P_1_4, \
	log_P_1_5)


#define ACTIVE_LOG_SM_31 1
#define AUX_LOG_SM_31 AP::logger().Write_setWindMagStateLearningMode9(\
	log_P_1_6, \
	log_P_1_7, \
	log_P_1_8, \
	log_P_1_9, \
	log_P_1_10, \
	log_P_1_11, \
	log_P_1_12, \
	log_P_1_13, \
	log_P_1_14, \
	log_P_1_15, \
	log_P_1_16, \
	log_P_1_17, \
	log_P_1_18, \
	log_P_1_19, \
	log_P_1_20)


#define ACTIVE_LOG_SM_32 1
#define AUX_LOG_SM_32 AP::logger().Write_setWindMagStateLearningMode10(\
	log_P_1_21, \
	log_P_1_22, \
	log_P_1_23, \
	log_P_2_0, \
	log_P_2_1, \
	log_P_2_2, \
	log_P_2_3, \
	log_P_2_4, \
	log_P_2_5, \
	log_P_2_6, \
	log_P_2_7, \
	log_P_2_8, \
	log_P_2_9, \
	log_P_2_10, \
	log_P_2_11)


#define ACTIVE_LOG_SM_33 1
#define AUX_LOG_SM_33 AP::logger().Write_setWindMagStateLearningMode11(\
	log_P_2_12, \
	log_P_2_13, \
	log_P_2_14, \
	log_P_2_15, \
	log_P_2_16, \
	log_P_2_17, \
	log_P_2_18, \
	log_P_2_19, \
	log_P_2_20, \
	log_P_2_21, \
	log_P_2_22, \
	log_P_2_23, \
	log_P_3_0, \
	log_P_3_1, \
	log_P_3_2)


#define ACTIVE_LOG_SM_34 1
#define AUX_LOG_SM_34 AP::logger().Write_setWindMagStateLearningMode12(\
	log_P_3_3, \
	log_P_3_4, \
	log_P_3_5, \
	log_P_3_6, \
	log_P_3_7, \
	log_P_3_8, \
	log_P_3_9, \
	log_P_3_10, \
	log_P_3_11, \
	log_P_3_12, \
	log_P_3_13, \
	log_P_3_14, \
	log_P_3_15, \
	log_P_3_16, \
	log_P_3_17)


#define ACTIVE_LOG_SM_35 1
#define AUX_LOG_SM_35 AP::logger().Write_setWindMagStateLearningMode13(\
	log_P_3_18, \
	log_P_3_19, \
	log_P_3_20, \
	log_P_3_21, \
	log_P_3_22, \
	log_P_3_23, \
	log_P_4_0, \
	log_P_4_1, \
	log_P_4_2, \
	log_P_4_3, \
	log_P_4_4, \
	log_P_4_5, \
	log_P_4_6, \
	log_P_4_7, \
	log_P_4_8)


#define ACTIVE_LOG_SM_36 1
#define AUX_LOG_SM_36 AP::logger().Write_setWindMagStateLearningMode14(\
	log_P_4_9, \
	log_P_4_10, \
	log_P_4_11, \
	log_P_4_12, \
	log_P_4_13, \
	log_P_4_14, \
	log_P_4_15, \
	log_P_4_16, \
	log_P_4_17, \
	log_P_4_18, \
	log_P_4_19, \
	log_P_4_20, \
	log_P_4_21, \
	log_P_4_22, \
	log_P_4_23)


#define ACTIVE_LOG_SM_37 1
#define AUX_LOG_SM_37 AP::logger().Write_setWindMagStateLearningMode15(\
	log_P_5_0, \
	log_P_5_1, \
	log_P_5_2, \
	log_P_5_3, \
	log_P_5_4, \
	log_P_5_5, \
	log_P_5_6, \
	log_P_5_7, \
	log_P_5_8, \
	log_P_5_9, \
	log_P_5_10, \
	log_P_5_11, \
	log_P_5_12, \
	log_P_5_13, \
	log_P_5_14)


#define ACTIVE_LOG_SM_38 1
#define AUX_LOG_SM_38 AP::logger().Write_setWindMagStateLearningMode16(\
	log_P_5_15, \
	log_P_5_16, \
	log_P_5_17, \
	log_P_5_18, \
	log_P_5_19, \
	log_P_5_20, \
	log_P_5_21, \
	log_P_5_22, \
	log_P_5_23, \
	log_P_6_0, \
	log_P_6_1, \
	log_P_6_2, \
	log_P_6_3, \
	log_P_6_4, \
	log_P_6_5)


#define ACTIVE_LOG_SM_39 1
#define AUX_LOG_SM_39 AP::logger().Write_setWindMagStateLearningMode17(\
	log_P_6_6, \
	log_P_6_7, \
	log_P_6_8, \
	log_P_6_9, \
	log_P_6_10, \
	log_P_6_11, \
	log_P_6_12, \
	log_P_6_13, \
	log_P_6_14, \
	log_P_6_15, \
	log_P_6_16, \
	log_P_6_17, \
	log_P_6_18, \
	log_P_6_19, \
	log_P_6_20)


#define ACTIVE_LOG_SM_40 1
#define AUX_LOG_SM_40 AP::logger().Write_setWindMagStateLearningMode18(\
	log_P_6_21, \
	log_P_6_22, \
	log_P_6_23, \
	log_P_7_0, \
	log_P_7_1, \
	log_P_7_2, \
	log_P_7_3, \
	log_P_7_4, \
	log_P_7_5, \
	log_P_7_6, \
	log_P_7_7, \
	log_P_7_8, \
	log_P_7_9, \
	log_P_7_10, \
	log_P_7_11)


#define ACTIVE_LOG_SM_41 1
#define AUX_LOG_SM_41 AP::logger().Write_setWindMagStateLearningMode19(\
	log_P_7_12, \
	log_P_7_13, \
	log_P_7_14, \
	log_P_7_15, \
	log_P_7_16, \
	log_P_7_17, \
	log_P_7_18, \
	log_P_7_19, \
	log_P_7_20, \
	log_P_7_21, \
	log_P_7_22, \
	log_P_7_23, \
	log_P_8_0, \
	log_P_8_1, \
	log_P_8_2)


#define ACTIVE_LOG_SM_42 1
#define AUX_LOG_SM_42 AP::logger().Write_setWindMagStateLearningMode20(\
	log_P_8_3, \
	log_P_8_4, \
	log_P_8_5, \
	log_P_8_6, \
	log_P_8_7, \
	log_P_8_8, \
	log_P_8_9, \
	log_P_8_10, \
	log_P_8_11, \
	log_P_8_12, \
	log_P_8_13, \
	log_P_8_14, \
	log_P_8_15, \
	log_P_8_16, \
	log_P_8_17)


#define ACTIVE_LOG_SM_43 1
#define AUX_LOG_SM_43 AP::logger().Write_setWindMagStateLearningMode21(\
	log_P_8_18, \
	log_P_8_19, \
	log_P_8_20, \
	log_P_8_21, \
	log_P_8_22, \
	log_P_8_23, \
	log_P_9_0, \
	log_P_9_1, \
	log_P_9_2, \
	log_P_9_3, \
	log_P_9_4, \
	log_P_9_5, \
	log_P_9_6, \
	log_P_9_7, \
	log_P_9_8)


#define ACTIVE_LOG_SM_44 1
#define AUX_LOG_SM_44 AP::logger().Write_setWindMagStateLearningMode22(\
	log_P_9_9, \
	log_P_9_10, \
	log_P_9_11, \
	log_P_9_12, \
	log_P_9_13, \
	log_P_9_14, \
	log_P_9_15, \
	log_P_9_16, \
	log_P_9_17, \
	log_P_9_18, \
	log_P_9_19, \
	log_P_9_20, \
	log_P_9_21, \
	log_P_9_22, \
	log_P_9_23)


#define ACTIVE_LOG_SM_45 1
#define AUX_LOG_SM_45 AP::logger().Write_setWindMagStateLearningMode23(\
	log_P_10_0, \
	log_P_10_1, \
	log_P_10_2, \
	log_P_10_3, \
	log_P_10_4, \
	log_P_10_5, \
	log_P_10_6, \
	log_P_10_7, \
	log_P_10_8, \
	log_P_10_9, \
	log_P_10_10, \
	log_P_10_11, \
	log_P_10_12, \
	log_P_10_13, \
	log_P_10_14)


#define ACTIVE_LOG_SM_46 1
#define AUX_LOG_SM_46 AP::logger().Write_setWindMagStateLearningMode24(\
	log_P_10_15, \
	log_P_10_16, \
	log_P_10_17, \
	log_P_10_18, \
	log_P_10_19, \
	log_P_10_20, \
	log_P_10_21, \
	log_P_10_22, \
	log_P_10_23, \
	log_P_11_0, \
	log_P_11_1, \
	log_P_11_2, \
	log_P_11_3, \
	log_P_11_4, \
	log_P_11_5)


#define ACTIVE_LOG_SM_47 1
#define AUX_LOG_SM_47 AP::logger().Write_setWindMagStateLearningMode25(\
	log_P_11_6, \
	log_P_11_7, \
	log_P_11_8, \
	log_P_11_9, \
	log_P_11_10, \
	log_P_11_11, \
	log_P_11_12, \
	log_P_11_13, \
	log_P_11_14, \
	log_P_11_15, \
	log_P_11_16, \
	log_P_11_17, \
	log_P_11_18, \
	log_P_11_19, \
	log_P_11_20)


#define ACTIVE_LOG_SM_48 1
#define AUX_LOG_SM_48 AP::logger().Write_setWindMagStateLearningMode26(\
	log_P_11_21, \
	log_P_11_22, \
	log_P_11_23, \
	log_P_12_0, \
	log_P_12_1, \
	log_P_12_2, \
	log_P_12_3, \
	log_P_12_4, \
	log_P_12_5, \
	log_P_12_6, \
	log_P_12_7, \
	log_P_12_8, \
	log_P_12_9, \
	log_P_12_10, \
	log_P_12_11)


#define ACTIVE_LOG_SM_49 1
#define AUX_LOG_SM_49 AP::logger().Write_setWindMagStateLearningMode27(\
	log_P_12_12, \
	log_P_12_13, \
	log_P_12_14, \
	log_P_12_15, \
	log_P_12_16, \
	log_P_12_17, \
	log_P_12_18, \
	log_P_12_19, \
	log_P_12_20, \
	log_P_12_21, \
	log_P_12_22, \
	log_P_12_23, \
	log_P_13_0, \
	log_P_13_1, \
	log_P_13_2)


#define ACTIVE_LOG_SM_50 1
#define AUX_LOG_SM_50 AP::logger().Write_setWindMagStateLearningMode28(\
	log_P_13_3, \
	log_P_13_4, \
	log_P_13_5, \
	log_P_13_6, \
	log_P_13_7, \
	log_P_13_8, \
	log_P_13_9, \
	log_P_13_10, \
	log_P_13_11, \
	log_P_13_12, \
	log_P_13_13, \
	log_P_13_14, \
	log_P_13_15, \
	log_P_13_16, \
	log_P_13_17)


#define ACTIVE_LOG_SM_51 1
#define AUX_LOG_SM_51 AP::logger().Write_setWindMagStateLearningMode29(\
	log_P_13_18, \
	log_P_13_19, \
	log_P_13_20, \
	log_P_13_21, \
	log_P_13_22, \
	log_P_13_23, \
	log_P_14_0, \
	log_P_14_1, \
	log_P_14_2, \
	log_P_14_3, \
	log_P_14_4, \
	log_P_14_5, \
	log_P_14_6, \
	log_P_14_7, \
	log_P_14_8)


#define ACTIVE_LOG_SM_52 1
#define AUX_LOG_SM_52 AP::logger().Write_setWindMagStateLearningMode30(\
	log_P_14_9, \
	log_P_14_10, \
	log_P_14_11, \
	log_P_14_12, \
	log_P_14_13, \
	log_P_14_14, \
	log_P_14_15, \
	log_P_14_16, \
	log_P_14_17, \
	log_P_14_18, \
	log_P_14_19, \
	log_P_14_20, \
	log_P_14_21, \
	log_P_14_22, \
	log_P_14_23)


#define ACTIVE_LOG_SM_53 1
#define AUX_LOG_SM_53 AP::logger().Write_setWindMagStateLearningMode31(\
	log_P_15_0, \
	log_P_15_1, \
	log_P_15_2, \
	log_P_15_3, \
	log_P_15_4, \
	log_P_15_5, \
	log_P_15_6, \
	log_P_15_7, \
	log_P_15_8, \
	log_P_15_9, \
	log_P_15_10, \
	log_P_15_11, \
	log_P_15_12, \
	log_P_15_13, \
	log_P_15_14)


#define ACTIVE_LOG_SM_54 1
#define AUX_LOG_SM_54 AP::logger().Write_setWindMagStateLearningMode32(\
	log_P_15_15, \
	log_P_15_16, \
	log_P_15_17, \
	log_P_15_18, \
	log_P_15_19, \
	log_P_15_20, \
	log_P_15_21, \
	log_P_15_22, \
	log_P_15_23, \
	log_P_16_0, \
	log_P_16_1, \
	log_P_16_2, \
	log_P_16_3, \
	log_P_16_4, \
	log_P_16_5)


#define ACTIVE_LOG_SM_55 1
#define AUX_LOG_SM_55 AP::logger().Write_setWindMagStateLearningMode33(\
	log_P_16_6, \
	log_P_16_7, \
	log_P_16_8, \
	log_P_16_9, \
	log_P_16_10, \
	log_P_16_11, \
	log_P_16_12, \
	log_P_16_13, \
	log_P_16_14, \
	log_P_16_15, \
	log_P_16_16, \
	log_P_16_17, \
	log_P_16_18, \
	log_P_16_19, \
	log_P_16_20)


#define ACTIVE_LOG_SM_56 1
#define AUX_LOG_SM_56 AP::logger().Write_setWindMagStateLearningMode34(\
	log_P_16_21, \
	log_P_16_22, \
	log_P_16_23, \
	log_P_17_0, \
	log_P_17_1, \
	log_P_17_2, \
	log_P_17_3, \
	log_P_17_4, \
	log_P_17_5, \
	log_P_17_6, \
	log_P_17_7, \
	log_P_17_8, \
	log_P_17_9, \
	log_P_17_10, \
	log_P_17_11)


#define ACTIVE_LOG_SM_57 1
#define AUX_LOG_SM_57 AP::logger().Write_setWindMagStateLearningMode35(\
	log_P_17_12, \
	log_P_17_13, \
	log_P_17_14, \
	log_P_17_15, \
	log_P_17_16, \
	log_P_17_17, \
	log_P_17_18, \
	log_P_17_19, \
	log_P_17_20, \
	log_P_17_21, \
	log_P_17_22, \
	log_P_17_23, \
	log_P_18_0, \
	log_P_18_1, \
	log_P_18_2)


#define ACTIVE_LOG_SM_58 1
#define AUX_LOG_SM_58 AP::logger().Write_setWindMagStateLearningMode36(\
	log_P_18_3, \
	log_P_18_4, \
	log_P_18_5, \
	log_P_18_6, \
	log_P_18_7, \
	log_P_18_8, \
	log_P_18_9, \
	log_P_18_10, \
	log_P_18_11, \
	log_P_18_12, \
	log_P_18_13, \
	log_P_18_14, \
	log_P_18_15, \
	log_P_18_16, \
	log_P_18_17)


#define ACTIVE_LOG_SM_59 1
#define AUX_LOG_SM_59 AP::logger().Write_setWindMagStateLearningMode37(\
	log_P_18_18, \
	log_P_18_19, \
	log_P_18_20, \
	log_P_18_21, \
	log_P_18_22, \
	log_P_18_23, \
	log_P_19_0, \
	log_P_19_1, \
	log_P_19_2, \
	log_P_19_3, \
	log_P_19_4, \
	log_P_19_5, \
	log_P_19_6, \
	log_P_19_7, \
	log_P_19_8)


#define ACTIVE_LOG_SM_60 1
#define AUX_LOG_SM_60 AP::logger().Write_setWindMagStateLearningMode38(\
	log_P_19_9, \
	log_P_19_10, \
	log_P_19_11, \
	log_P_19_12, \
	log_P_19_13, \
	log_P_19_14, \
	log_P_19_15, \
	log_P_19_16, \
	log_P_19_17, \
	log_P_19_18, \
	log_P_19_19, \
	log_P_19_20, \
	log_P_19_21, \
	log_P_19_22, \
	log_P_19_23)


#define ACTIVE_LOG_SM_61 1
#define AUX_LOG_SM_61 AP::logger().Write_setWindMagStateLearningMode39(\
	log_P_20_0, \
	log_P_20_1, \
	log_P_20_2, \
	log_P_20_3, \
	log_P_20_4, \
	log_P_20_5, \
	log_P_20_6, \
	log_P_20_7, \
	log_P_20_8, \
	log_P_20_9, \
	log_P_20_10, \
	log_P_20_11, \
	log_P_20_12, \
	log_P_20_13, \
	log_P_20_14)


#define ACTIVE_LOG_SM_62 1
#define AUX_LOG_SM_62 AP::logger().Write_setWindMagStateLearningMode40(\
	log_P_20_15, \
	log_P_20_16, \
	log_P_20_17, \
	log_P_20_18, \
	log_P_20_19, \
	log_P_20_20, \
	log_P_20_21, \
	log_P_20_22, \
	log_P_20_23, \
	log_P_21_0, \
	log_P_21_1, \
	log_P_21_2, \
	log_P_21_3, \
	log_P_21_4, \
	log_P_21_5)


#define ACTIVE_LOG_SM_63 1
#define AUX_LOG_SM_63 AP::logger().Write_setWindMagStateLearningMode41(\
	log_P_21_6, \
	log_P_21_7, \
	log_P_21_8, \
	log_P_21_9, \
	log_P_21_10, \
	log_P_21_11, \
	log_P_21_12, \
	log_P_21_13, \
	log_P_21_14, \
	log_P_21_15, \
	log_P_21_16, \
	log_P_21_17, \
	log_P_21_18, \
	log_P_21_19, \
	log_P_21_20)


#define ACTIVE_LOG_SM_64 1
#define AUX_LOG_SM_64 AP::logger().Write_setWindMagStateLearningMode42(\
	log_P_21_21, \
	log_P_21_22, \
	log_P_21_23, \
	log_P_22_0, \
	log_P_22_1, \
	log_P_22_2, \
	log_P_22_3, \
	log_P_22_4, \
	log_P_22_5, \
	log_P_22_6, \
	log_P_22_7, \
	log_P_22_8, \
	log_P_22_9, \
	log_P_22_10, \
	log_P_22_11)


#define ACTIVE_LOG_SM_65 1
#define AUX_LOG_SM_65 AP::logger().Write_setWindMagStateLearningMode43(\
	log_P_22_12, \
	log_P_22_13, \
	log_P_22_14, \
	log_P_22_15, \
	log_P_22_16, \
	log_P_22_17, \
	log_P_22_18, \
	log_P_22_19, \
	log_P_22_20, \
	log_P_22_21, \
	log_P_22_22, \
	log_P_22_23, \
	log_P_23_0, \
	log_P_23_1, \
	log_P_23_2)


#define ACTIVE_LOG_SM_66 1
#define AUX_LOG_SM_66 AP::logger().Write_setWindMagStateLearningMode44(\
	log_P_23_3, \
	log_P_23_4, \
	log_P_23_5, \
	log_P_23_6, \
	log_P_23_7, \
	log_P_23_8, \
	log_P_23_9, \
	log_P_23_10, \
	log_P_23_11, \
	log_P_23_12, \
	log_P_23_13, \
	log_P_23_14, \
	log_P_23_15, \
	log_P_23_16, \
	log_P_23_17)


#define ACTIVE_LOG_SM_67 1
#define AUX_LOG_SM_67 AP::logger().Write_setWindMagStateLearningMode45(\
	log_P_23_18, \
	log_P_23_19, \
	log_P_23_20, \
	log_P_23_21, \
	log_P_23_22, \
	log_P_23_23)


ATRIBUICAO PARA OS #if E #endif

	float log_P_0_0 = P[0][0];
	float log_P_0_1 = P[0][1];
	float log_P_0_2 = P[0][2];
	float log_P_0_3 = P[0][3];
	float log_P_0_4 = P[0][4];
	float log_P_0_5 = P[0][5];
	float log_P_0_6 = P[0][6];
	float log_P_0_7 = P[0][7];
	float log_P_0_8 = P[0][8];
	float log_P_0_9 = P[0][9];
	float log_P_0_10 = P[0][10];
	float log_P_0_11 = P[0][11];
	float log_P_0_12 = P[0][12];
	float log_P_0_13 = P[0][13];
	float log_P_0_14 = P[0][14];
	AUX_LOG_SM_29;

	float log_P_0_15 = P[0][15];
	float log_P_0_16 = P[0][16];
	float log_P_0_17 = P[0][17];
	float log_P_0_18 = P[0][18];
	float log_P_0_19 = P[0][19];
	float log_P_0_20 = P[0][20];
	float log_P_0_21 = P[0][21];
	float log_P_0_22 = P[0][22];
	float log_P_0_23 = P[0][23];
	float log_P_1_0 = P[1][0];
	float log_P_1_1 = P[1][1];
	float log_P_1_2 = P[1][2];
	float log_P_1_3 = P[1][3];
	float log_P_1_4 = P[1][4];
	float log_P_1_5 = P[1][5];
	AUX_LOG_SM_30;

	float log_P_1_6 = P[1][6];
	float log_P_1_7 = P[1][7];
	float log_P_1_8 = P[1][8];
	float log_P_1_9 = P[1][9];
	float log_P_1_10 = P[1][10];
	float log_P_1_11 = P[1][11];
	float log_P_1_12 = P[1][12];
	float log_P_1_13 = P[1][13];
	float log_P_1_14 = P[1][14];
	float log_P_1_15 = P[1][15];
	float log_P_1_16 = P[1][16];
	float log_P_1_17 = P[1][17];
	float log_P_1_18 = P[1][18];
	float log_P_1_19 = P[1][19];
	float log_P_1_20 = P[1][20];
	AUX_LOG_SM_31;

	float log_P_1_21 = P[1][21];
	float log_P_1_22 = P[1][22];
	float log_P_1_23 = P[1][23];
	float log_P_2_0 = P[2][0];
	float log_P_2_1 = P[2][1];
	float log_P_2_2 = P[2][2];
	float log_P_2_3 = P[2][3];
	float log_P_2_4 = P[2][4];
	float log_P_2_5 = P[2][5];
	float log_P_2_6 = P[2][6];
	float log_P_2_7 = P[2][7];
	float log_P_2_8 = P[2][8];
	float log_P_2_9 = P[2][9];
	float log_P_2_10 = P[2][10];
	float log_P_2_11 = P[2][11];
	AUX_LOG_SM_32;

	float log_P_2_12 = P[2][12];
	float log_P_2_13 = P[2][13];
	float log_P_2_14 = P[2][14];
	float log_P_2_15 = P[2][15];
	float log_P_2_16 = P[2][16];
	float log_P_2_17 = P[2][17];
	float log_P_2_18 = P[2][18];
	float log_P_2_19 = P[2][19];
	float log_P_2_20 = P[2][20];
	float log_P_2_21 = P[2][21];
	float log_P_2_22 = P[2][22];
	float log_P_2_23 = P[2][23];
	float log_P_3_0 = P[3][0];
	float log_P_3_1 = P[3][1];
	float log_P_3_2 = P[3][2];
	AUX_LOG_SM_33;

	float log_P_3_3 = P[3][3];
	float log_P_3_4 = P[3][4];
	float log_P_3_5 = P[3][5];
	float log_P_3_6 = P[3][6];
	float log_P_3_7 = P[3][7];
	float log_P_3_8 = P[3][8];
	float log_P_3_9 = P[3][9];
	float log_P_3_10 = P[3][10];
	float log_P_3_11 = P[3][11];
	float log_P_3_12 = P[3][12];
	float log_P_3_13 = P[3][13];
	float log_P_3_14 = P[3][14];
	float log_P_3_15 = P[3][15];
	float log_P_3_16 = P[3][16];
	float log_P_3_17 = P[3][17];
	AUX_LOG_SM_34;

	float log_P_3_18 = P[3][18];
	float log_P_3_19 = P[3][19];
	float log_P_3_20 = P[3][20];
	float log_P_3_21 = P[3][21];
	float log_P_3_22 = P[3][22];
	float log_P_3_23 = P[3][23];
	float log_P_4_0 = P[4][0];
	float log_P_4_1 = P[4][1];
	float log_P_4_2 = P[4][2];
	float log_P_4_3 = P[4][3];
	float log_P_4_4 = P[4][4];
	float log_P_4_5 = P[4][5];
	float log_P_4_6 = P[4][6];
	float log_P_4_7 = P[4][7];
	float log_P_4_8 = P[4][8];
	AUX_LOG_SM_35;

	float log_P_4_9 = P[4][9];
	float log_P_4_10 = P[4][10];
	float log_P_4_11 = P[4][11];
	float log_P_4_12 = P[4][12];
	float log_P_4_13 = P[4][13];
	float log_P_4_14 = P[4][14];
	float log_P_4_15 = P[4][15];
	float log_P_4_16 = P[4][16];
	float log_P_4_17 = P[4][17];
	float log_P_4_18 = P[4][18];
	float log_P_4_19 = P[4][19];
	float log_P_4_20 = P[4][20];
	float log_P_4_21 = P[4][21];
	float log_P_4_22 = P[4][22];
	float log_P_4_23 = P[4][23];
	AUX_LOG_SM_36;

	float log_P_5_0 = P[5][0];
	float log_P_5_1 = P[5][1];
	float log_P_5_2 = P[5][2];
	float log_P_5_3 = P[5][3];
	float log_P_5_4 = P[5][4];
	float log_P_5_5 = P[5][5];
	float log_P_5_6 = P[5][6];
	float log_P_5_7 = P[5][7];
	float log_P_5_8 = P[5][8];
	float log_P_5_9 = P[5][9];
	float log_P_5_10 = P[5][10];
	float log_P_5_11 = P[5][11];
	float log_P_5_12 = P[5][12];
	float log_P_5_13 = P[5][13];
	float log_P_5_14 = P[5][14];
	AUX_LOG_SM_37;

	float log_P_5_15 = P[5][15];
	float log_P_5_16 = P[5][16];
	float log_P_5_17 = P[5][17];
	float log_P_5_18 = P[5][18];
	float log_P_5_19 = P[5][19];
	float log_P_5_20 = P[5][20];
	float log_P_5_21 = P[5][21];
	float log_P_5_22 = P[5][22];
	float log_P_5_23 = P[5][23];
	float log_P_6_0 = P[6][0];
	float log_P_6_1 = P[6][1];
	float log_P_6_2 = P[6][2];
	float log_P_6_3 = P[6][3];
	float log_P_6_4 = P[6][4];
	float log_P_6_5 = P[6][5];
	AUX_LOG_SM_38;

	float log_P_6_6 = P[6][6];
	float log_P_6_7 = P[6][7];
	float log_P_6_8 = P[6][8];
	float log_P_6_9 = P[6][9];
	float log_P_6_10 = P[6][10];
	float log_P_6_11 = P[6][11];
	float log_P_6_12 = P[6][12];
	float log_P_6_13 = P[6][13];
	float log_P_6_14 = P[6][14];
	float log_P_6_15 = P[6][15];
	float log_P_6_16 = P[6][16];
	float log_P_6_17 = P[6][17];
	float log_P_6_18 = P[6][18];
	float log_P_6_19 = P[6][19];
	float log_P_6_20 = P[6][20];
	AUX_LOG_SM_39;

	float log_P_6_21 = P[6][21];
	float log_P_6_22 = P[6][22];
	float log_P_6_23 = P[6][23];
	float log_P_7_0 = P[7][0];
	float log_P_7_1 = P[7][1];
	float log_P_7_2 = P[7][2];
	float log_P_7_3 = P[7][3];
	float log_P_7_4 = P[7][4];
	float log_P_7_5 = P[7][5];
	float log_P_7_6 = P[7][6];
	float log_P_7_7 = P[7][7];
	float log_P_7_8 = P[7][8];
	float log_P_7_9 = P[7][9];
	float log_P_7_10 = P[7][10];
	float log_P_7_11 = P[7][11];
	AUX_LOG_SM_40;

	float log_P_7_12 = P[7][12];
	float log_P_7_13 = P[7][13];
	float log_P_7_14 = P[7][14];
	float log_P_7_15 = P[7][15];
	float log_P_7_16 = P[7][16];
	float log_P_7_17 = P[7][17];
	float log_P_7_18 = P[7][18];
	float log_P_7_19 = P[7][19];
	float log_P_7_20 = P[7][20];
	float log_P_7_21 = P[7][21];
	float log_P_7_22 = P[7][22];
	float log_P_7_23 = P[7][23];
	float log_P_8_0 = P[8][0];
	float log_P_8_1 = P[8][1];
	float log_P_8_2 = P[8][2];
	AUX_LOG_SM_41;

	float log_P_8_3 = P[8][3];
	float log_P_8_4 = P[8][4];
	float log_P_8_5 = P[8][5];
	float log_P_8_6 = P[8][6];
	float log_P_8_7 = P[8][7];
	float log_P_8_8 = P[8][8];
	float log_P_8_9 = P[8][9];
	float log_P_8_10 = P[8][10];
	float log_P_8_11 = P[8][11];
	float log_P_8_12 = P[8][12];
	float log_P_8_13 = P[8][13];
	float log_P_8_14 = P[8][14];
	float log_P_8_15 = P[8][15];
	float log_P_8_16 = P[8][16];
	float log_P_8_17 = P[8][17];
	AUX_LOG_SM_42;

	float log_P_8_18 = P[8][18];
	float log_P_8_19 = P[8][19];
	float log_P_8_20 = P[8][20];
	float log_P_8_21 = P[8][21];
	float log_P_8_22 = P[8][22];
	float log_P_8_23 = P[8][23];
	float log_P_9_0 = P[9][0];
	float log_P_9_1 = P[9][1];
	float log_P_9_2 = P[9][2];
	float log_P_9_3 = P[9][3];
	float log_P_9_4 = P[9][4];
	float log_P_9_5 = P[9][5];
	float log_P_9_6 = P[9][6];
	float log_P_9_7 = P[9][7];
	float log_P_9_8 = P[9][8];
	AUX_LOG_SM_43;

	float log_P_9_9 = P[9][9];
	float log_P_9_10 = P[9][10];
	float log_P_9_11 = P[9][11];
	float log_P_9_12 = P[9][12];
	float log_P_9_13 = P[9][13];
	float log_P_9_14 = P[9][14];
	float log_P_9_15 = P[9][15];
	float log_P_9_16 = P[9][16];
	float log_P_9_17 = P[9][17];
	float log_P_9_18 = P[9][18];
	float log_P_9_19 = P[9][19];
	float log_P_9_20 = P[9][20];
	float log_P_9_21 = P[9][21];
	float log_P_9_22 = P[9][22];
	float log_P_9_23 = P[9][23];
	AUX_LOG_SM_44;

	float log_P_10_0 = P[10][0];
	float log_P_10_1 = P[10][1];
	float log_P_10_2 = P[10][2];
	float log_P_10_3 = P[10][3];
	float log_P_10_4 = P[10][4];
	float log_P_10_5 = P[10][5];
	float log_P_10_6 = P[10][6];
	float log_P_10_7 = P[10][7];
	float log_P_10_8 = P[10][8];
	float log_P_10_9 = P[10][9];
	float log_P_10_10 = P[10][10];
	float log_P_10_11 = P[10][11];
	float log_P_10_12 = P[10][12];
	float log_P_10_13 = P[10][13];
	float log_P_10_14 = P[10][14];
	AUX_LOG_SM_45;

	float log_P_10_15 = P[10][15];
	float log_P_10_16 = P[10][16];
	float log_P_10_17 = P[10][17];
	float log_P_10_18 = P[10][18];
	float log_P_10_19 = P[10][19];
	float log_P_10_20 = P[10][20];
	float log_P_10_21 = P[10][21];
	float log_P_10_22 = P[10][22];
	float log_P_10_23 = P[10][23];
	float log_P_11_0 = P[11][0];
	float log_P_11_1 = P[11][1];
	float log_P_11_2 = P[11][2];
	float log_P_11_3 = P[11][3];
	float log_P_11_4 = P[11][4];
	float log_P_11_5 = P[11][5];
	AUX_LOG_SM_46;

	float log_P_11_6 = P[11][6];
	float log_P_11_7 = P[11][7];
	float log_P_11_8 = P[11][8];
	float log_P_11_9 = P[11][9];
	float log_P_11_10 = P[11][10];
	float log_P_11_11 = P[11][11];
	float log_P_11_12 = P[11][12];
	float log_P_11_13 = P[11][13];
	float log_P_11_14 = P[11][14];
	float log_P_11_15 = P[11][15];
	float log_P_11_16 = P[11][16];
	float log_P_11_17 = P[11][17];
	float log_P_11_18 = P[11][18];
	float log_P_11_19 = P[11][19];
	float log_P_11_20 = P[11][20];
	AUX_LOG_SM_47;

	float log_P_11_21 = P[11][21];
	float log_P_11_22 = P[11][22];
	float log_P_11_23 = P[11][23];
	float log_P_12_0 = P[12][0];
	float log_P_12_1 = P[12][1];
	float log_P_12_2 = P[12][2];
	float log_P_12_3 = P[12][3];
	float log_P_12_4 = P[12][4];
	float log_P_12_5 = P[12][5];
	float log_P_12_6 = P[12][6];
	float log_P_12_7 = P[12][7];
	float log_P_12_8 = P[12][8];
	float log_P_12_9 = P[12][9];
	float log_P_12_10 = P[12][10];
	float log_P_12_11 = P[12][11];
	AUX_LOG_SM_48;

	float log_P_12_12 = P[12][12];
	float log_P_12_13 = P[12][13];
	float log_P_12_14 = P[12][14];
	float log_P_12_15 = P[12][15];
	float log_P_12_16 = P[12][16];
	float log_P_12_17 = P[12][17];
	float log_P_12_18 = P[12][18];
	float log_P_12_19 = P[12][19];
	float log_P_12_20 = P[12][20];
	float log_P_12_21 = P[12][21];
	float log_P_12_22 = P[12][22];
	float log_P_12_23 = P[12][23];
	float log_P_13_0 = P[13][0];
	float log_P_13_1 = P[13][1];
	float log_P_13_2 = P[13][2];
	AUX_LOG_SM_49;

	float log_P_13_3 = P[13][3];
	float log_P_13_4 = P[13][4];
	float log_P_13_5 = P[13][5];
	float log_P_13_6 = P[13][6];
	float log_P_13_7 = P[13][7];
	float log_P_13_8 = P[13][8];
	float log_P_13_9 = P[13][9];
	float log_P_13_10 = P[13][10];
	float log_P_13_11 = P[13][11];
	float log_P_13_12 = P[13][12];
	float log_P_13_13 = P[13][13];
	float log_P_13_14 = P[13][14];
	float log_P_13_15 = P[13][15];
	float log_P_13_16 = P[13][16];
	float log_P_13_17 = P[13][17];
	AUX_LOG_SM_50;

	float log_P_13_18 = P[13][18];
	float log_P_13_19 = P[13][19];
	float log_P_13_20 = P[13][20];
	float log_P_13_21 = P[13][21];
	float log_P_13_22 = P[13][22];
	float log_P_13_23 = P[13][23];
	float log_P_14_0 = P[14][0];
	float log_P_14_1 = P[14][1];
	float log_P_14_2 = P[14][2];
	float log_P_14_3 = P[14][3];
	float log_P_14_4 = P[14][4];
	float log_P_14_5 = P[14][5];
	float log_P_14_6 = P[14][6];
	float log_P_14_7 = P[14][7];
	float log_P_14_8 = P[14][8];
	AUX_LOG_SM_51;

	float log_P_14_9 = P[14][9];
	float log_P_14_10 = P[14][10];
	float log_P_14_11 = P[14][11];
	float log_P_14_12 = P[14][12];
	float log_P_14_13 = P[14][13];
	float log_P_14_14 = P[14][14];
	float log_P_14_15 = P[14][15];
	float log_P_14_16 = P[14][16];
	float log_P_14_17 = P[14][17];
	float log_P_14_18 = P[14][18];
	float log_P_14_19 = P[14][19];
	float log_P_14_20 = P[14][20];
	float log_P_14_21 = P[14][21];
	float log_P_14_22 = P[14][22];
	float log_P_14_23 = P[14][23];
	AUX_LOG_SM_52;

	float log_P_15_0 = P[15][0];
	float log_P_15_1 = P[15][1];
	float log_P_15_2 = P[15][2];
	float log_P_15_3 = P[15][3];
	float log_P_15_4 = P[15][4];
	float log_P_15_5 = P[15][5];
	float log_P_15_6 = P[15][6];
	float log_P_15_7 = P[15][7];
	float log_P_15_8 = P[15][8];
	float log_P_15_9 = P[15][9];
	float log_P_15_10 = P[15][10];
	float log_P_15_11 = P[15][11];
	float log_P_15_12 = P[15][12];
	float log_P_15_13 = P[15][13];
	float log_P_15_14 = P[15][14];
	AUX_LOG_SM_53;

	float log_P_15_15 = P[15][15];
	float log_P_15_16 = P[15][16];
	float log_P_15_17 = P[15][17];
	float log_P_15_18 = P[15][18];
	float log_P_15_19 = P[15][19];
	float log_P_15_20 = P[15][20];
	float log_P_15_21 = P[15][21];
	float log_P_15_22 = P[15][22];
	float log_P_15_23 = P[15][23];
	float log_P_16_0 = P[16][0];
	float log_P_16_1 = P[16][1];
	float log_P_16_2 = P[16][2];
	float log_P_16_3 = P[16][3];
	float log_P_16_4 = P[16][4];
	float log_P_16_5 = P[16][5];
	AUX_LOG_SM_54;

	float log_P_16_6 = P[16][6];
	float log_P_16_7 = P[16][7];
	float log_P_16_8 = P[16][8];
	float log_P_16_9 = P[16][9];
	float log_P_16_10 = P[16][10];
	float log_P_16_11 = P[16][11];
	float log_P_16_12 = P[16][12];
	float log_P_16_13 = P[16][13];
	float log_P_16_14 = P[16][14];
	float log_P_16_15 = P[16][15];
	float log_P_16_16 = P[16][16];
	float log_P_16_17 = P[16][17];
	float log_P_16_18 = P[16][18];
	float log_P_16_19 = P[16][19];
	float log_P_16_20 = P[16][20];
	AUX_LOG_SM_55;

	float log_P_16_21 = P[16][21];
	float log_P_16_22 = P[16][22];
	float log_P_16_23 = P[16][23];
	float log_P_17_0 = P[17][0];
	float log_P_17_1 = P[17][1];
	float log_P_17_2 = P[17][2];
	float log_P_17_3 = P[17][3];
	float log_P_17_4 = P[17][4];
	float log_P_17_5 = P[17][5];
	float log_P_17_6 = P[17][6];
	float log_P_17_7 = P[17][7];
	float log_P_17_8 = P[17][8];
	float log_P_17_9 = P[17][9];
	float log_P_17_10 = P[17][10];
	float log_P_17_11 = P[17][11];
	AUX_LOG_SM_56;

	float log_P_17_12 = P[17][12];
	float log_P_17_13 = P[17][13];
	float log_P_17_14 = P[17][14];
	float log_P_17_15 = P[17][15];
	float log_P_17_16 = P[17][16];
	float log_P_17_17 = P[17][17];
	float log_P_17_18 = P[17][18];
	float log_P_17_19 = P[17][19];
	float log_P_17_20 = P[17][20];
	float log_P_17_21 = P[17][21];
	float log_P_17_22 = P[17][22];
	float log_P_17_23 = P[17][23];
	float log_P_18_0 = P[18][0];
	float log_P_18_1 = P[18][1];
	float log_P_18_2 = P[18][2];
	AUX_LOG_SM_57;

	float log_P_18_3 = P[18][3];
	float log_P_18_4 = P[18][4];
	float log_P_18_5 = P[18][5];
	float log_P_18_6 = P[18][6];
	float log_P_18_7 = P[18][7];
	float log_P_18_8 = P[18][8];
	float log_P_18_9 = P[18][9];
	float log_P_18_10 = P[18][10];
	float log_P_18_11 = P[18][11];
	float log_P_18_12 = P[18][12];
	float log_P_18_13 = P[18][13];
	float log_P_18_14 = P[18][14];
	float log_P_18_15 = P[18][15];
	float log_P_18_16 = P[18][16];
	float log_P_18_17 = P[18][17];
	AUX_LOG_SM_58;

	float log_P_18_18 = P[18][18];
	float log_P_18_19 = P[18][19];
	float log_P_18_20 = P[18][20];
	float log_P_18_21 = P[18][21];
	float log_P_18_22 = P[18][22];
	float log_P_18_23 = P[18][23];
	float log_P_19_0 = P[19][0];
	float log_P_19_1 = P[19][1];
	float log_P_19_2 = P[19][2];
	float log_P_19_3 = P[19][3];
	float log_P_19_4 = P[19][4];
	float log_P_19_5 = P[19][5];
	float log_P_19_6 = P[19][6];
	float log_P_19_7 = P[19][7];
	float log_P_19_8 = P[19][8];
	AUX_LOG_SM_59;

	float log_P_19_9 = P[19][9];
	float log_P_19_10 = P[19][10];
	float log_P_19_11 = P[19][11];
	float log_P_19_12 = P[19][12];
	float log_P_19_13 = P[19][13];
	float log_P_19_14 = P[19][14];
	float log_P_19_15 = P[19][15];
	float log_P_19_16 = P[19][16];
	float log_P_19_17 = P[19][17];
	float log_P_19_18 = P[19][18];
	float log_P_19_19 = P[19][19];
	float log_P_19_20 = P[19][20];
	float log_P_19_21 = P[19][21];
	float log_P_19_22 = P[19][22];
	float log_P_19_23 = P[19][23];
	AUX_LOG_SM_60;

	float log_P_20_0 = P[20][0];
	float log_P_20_1 = P[20][1];
	float log_P_20_2 = P[20][2];
	float log_P_20_3 = P[20][3];
	float log_P_20_4 = P[20][4];
	float log_P_20_5 = P[20][5];
	float log_P_20_6 = P[20][6];
	float log_P_20_7 = P[20][7];
	float log_P_20_8 = P[20][8];
	float log_P_20_9 = P[20][9];
	float log_P_20_10 = P[20][10];
	float log_P_20_11 = P[20][11];
	float log_P_20_12 = P[20][12];
	float log_P_20_13 = P[20][13];
	float log_P_20_14 = P[20][14];
	AUX_LOG_SM_61;

	float log_P_20_15 = P[20][15];
	float log_P_20_16 = P[20][16];
	float log_P_20_17 = P[20][17];
	float log_P_20_18 = P[20][18];
	float log_P_20_19 = P[20][19];
	float log_P_20_20 = P[20][20];
	float log_P_20_21 = P[20][21];
	float log_P_20_22 = P[20][22];
	float log_P_20_23 = P[20][23];
	float log_P_21_0 = P[21][0];
	float log_P_21_1 = P[21][1];
	float log_P_21_2 = P[21][2];
	float log_P_21_3 = P[21][3];
	float log_P_21_4 = P[21][4];
	float log_P_21_5 = P[21][5];
	AUX_LOG_SM_62;

	float log_P_21_6 = P[21][6];
	float log_P_21_7 = P[21][7];
	float log_P_21_8 = P[21][8];
	float log_P_21_9 = P[21][9];
	float log_P_21_10 = P[21][10];
	float log_P_21_11 = P[21][11];
	float log_P_21_12 = P[21][12];
	float log_P_21_13 = P[21][13];
	float log_P_21_14 = P[21][14];
	float log_P_21_15 = P[21][15];
	float log_P_21_16 = P[21][16];
	float log_P_21_17 = P[21][17];
	float log_P_21_18 = P[21][18];
	float log_P_21_19 = P[21][19];
	float log_P_21_20 = P[21][20];
	AUX_LOG_SM_63;

	float log_P_21_21 = P[21][21];
	float log_P_21_22 = P[21][22];
	float log_P_21_23 = P[21][23];
	float log_P_22_0 = P[22][0];
	float log_P_22_1 = P[22][1];
	float log_P_22_2 = P[22][2];
	float log_P_22_3 = P[22][3];
	float log_P_22_4 = P[22][4];
	float log_P_22_5 = P[22][5];
	float log_P_22_6 = P[22][6];
	float log_P_22_7 = P[22][7];
	float log_P_22_8 = P[22][8];
	float log_P_22_9 = P[22][9];
	float log_P_22_10 = P[22][10];
	float log_P_22_11 = P[22][11];
	AUX_LOG_SM_64;

	float log_P_22_12 = P[22][12];
	float log_P_22_13 = P[22][13];
	float log_P_22_14 = P[22][14];
	float log_P_22_15 = P[22][15];
	float log_P_22_16 = P[22][16];
	float log_P_22_17 = P[22][17];
	float log_P_22_18 = P[22][18];
	float log_P_22_19 = P[22][19];
	float log_P_22_20 = P[22][20];
	float log_P_22_21 = P[22][21];
	float log_P_22_22 = P[22][22];
	float log_P_22_23 = P[22][23];
	float log_P_23_0 = P[23][0];
	float log_P_23_1 = P[23][1];
	float log_P_23_2 = P[23][2];
	AUX_LOG_SM_65;

	float log_P_23_3 = P[23][3];
	float log_P_23_4 = P[23][4];
	float log_P_23_5 = P[23][5];
	float log_P_23_6 = P[23][6];
	float log_P_23_7 = P[23][7];
	float log_P_23_8 = P[23][8];
	float log_P_23_9 = P[23][9];
	float log_P_23_10 = P[23][10];
	float log_P_23_11 = P[23][11];
	float log_P_23_12 = P[23][12];
	float log_P_23_13 = P[23][13];
	float log_P_23_14 = P[23][14];
	float log_P_23_15 = P[23][15];
	float log_P_23_16 = P[23][16];
	float log_P_23_17 = P[23][17];
	AUX_LOG_SM_66;

	float log_P_23_18 = P[23][18];
	float log_P_23_19 = P[23][19];
	float log_P_23_20 = P[23][20];
	float log_P_23_21 = P[23][21];
	float log_P_23_22 = P[23][22];
	float log_P_23_23 = P[23][23];
	AUX_LOG_SM_67;



=============== XMOBOTS_LOGS.H ====================

#define LOG_SM_29_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_29), "SM29",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_29 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_0_0;
	float P_0_1;
	float P_0_2;
	float P_0_3;
	float P_0_4;
	float P_0_5;
	float P_0_6;
	float P_0_7;
	float P_0_8;
	float P_0_9;
	float P_0_10;
	float P_0_11;
	float P_0_12;
	float P_0_13;
	float P_0_14;
};

#define LOG_SM_30_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_30), "SM30",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_30 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_0_15;
	float P_0_16;
	float P_0_17;
	float P_0_18;
	float P_0_19;
	float P_0_20;
	float P_0_21;
	float P_0_22;
	float P_0_23;
	float P_1_0;
	float P_1_1;
	float P_1_2;
	float P_1_3;
	float P_1_4;
	float P_1_5;
};

#define LOG_SM_31_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_31), "SM31",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_31 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_1_6;
	float P_1_7;
	float P_1_8;
	float P_1_9;
	float P_1_10;
	float P_1_11;
	float P_1_12;
	float P_1_13;
	float P_1_14;
	float P_1_15;
	float P_1_16;
	float P_1_17;
	float P_1_18;
	float P_1_19;
	float P_1_20;
};

#define LOG_SM_32_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_32), "SM32",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_32 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_1_21;
	float P_1_22;
	float P_1_23;
	float P_2_0;
	float P_2_1;
	float P_2_2;
	float P_2_3;
	float P_2_4;
	float P_2_5;
	float P_2_6;
	float P_2_7;
	float P_2_8;
	float P_2_9;
	float P_2_10;
	float P_2_11;
};

#define LOG_SM_33_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_33), "SM33",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_33 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_2_12;
	float P_2_13;
	float P_2_14;
	float P_2_15;
	float P_2_16;
	float P_2_17;
	float P_2_18;
	float P_2_19;
	float P_2_20;
	float P_2_21;
	float P_2_22;
	float P_2_23;
	float P_3_0;
	float P_3_1;
	float P_3_2;
};

#define LOG_SM_34_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_34), "SM34",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_34 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_3_3;
	float P_3_4;
	float P_3_5;
	float P_3_6;
	float P_3_7;
	float P_3_8;
	float P_3_9;
	float P_3_10;
	float P_3_11;
	float P_3_12;
	float P_3_13;
	float P_3_14;
	float P_3_15;
	float P_3_16;
	float P_3_17;
};

#define LOG_SM_35_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_35), "SM35",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_35 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_3_18;
	float P_3_19;
	float P_3_20;
	float P_3_21;
	float P_3_22;
	float P_3_23;
	float P_4_0;
	float P_4_1;
	float P_4_2;
	float P_4_3;
	float P_4_4;
	float P_4_5;
	float P_4_6;
	float P_4_7;
	float P_4_8;
};

#define LOG_SM_36_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_36), "SM36",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_36 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_4_9;
	float P_4_10;
	float P_4_11;
	float P_4_12;
	float P_4_13;
	float P_4_14;
	float P_4_15;
	float P_4_16;
	float P_4_17;
	float P_4_18;
	float P_4_19;
	float P_4_20;
	float P_4_21;
	float P_4_22;
	float P_4_23;
};

#define LOG_SM_37_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_37), "SM37",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_37 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_5_0;
	float P_5_1;
	float P_5_2;
	float P_5_3;
	float P_5_4;
	float P_5_5;
	float P_5_6;
	float P_5_7;
	float P_5_8;
	float P_5_9;
	float P_5_10;
	float P_5_11;
	float P_5_12;
	float P_5_13;
	float P_5_14;
};

#define LOG_SM_38_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_38), "SM38",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_38 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_5_15;
	float P_5_16;
	float P_5_17;
	float P_5_18;
	float P_5_19;
	float P_5_20;
	float P_5_21;
	float P_5_22;
	float P_5_23;
	float P_6_0;
	float P_6_1;
	float P_6_2;
	float P_6_3;
	float P_6_4;
	float P_6_5;
};

#define LOG_SM_39_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_39), "SM39",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_39 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_6_6;
	float P_6_7;
	float P_6_8;
	float P_6_9;
	float P_6_10;
	float P_6_11;
	float P_6_12;
	float P_6_13;
	float P_6_14;
	float P_6_15;
	float P_6_16;
	float P_6_17;
	float P_6_18;
	float P_6_19;
	float P_6_20;
};

#define LOG_SM_40_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_40), "SM40",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_40 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_6_21;
	float P_6_22;
	float P_6_23;
	float P_7_0;
	float P_7_1;
	float P_7_2;
	float P_7_3;
	float P_7_4;
	float P_7_5;
	float P_7_6;
	float P_7_7;
	float P_7_8;
	float P_7_9;
	float P_7_10;
	float P_7_11;
};

#define LOG_SM_41_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_41), "SM41",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_41 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_7_12;
	float P_7_13;
	float P_7_14;
	float P_7_15;
	float P_7_16;
	float P_7_17;
	float P_7_18;
	float P_7_19;
	float P_7_20;
	float P_7_21;
	float P_7_22;
	float P_7_23;
	float P_8_0;
	float P_8_1;
	float P_8_2;
};

#define LOG_SM_42_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_42), "SM42",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_42 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_8_3;
	float P_8_4;
	float P_8_5;
	float P_8_6;
	float P_8_7;
	float P_8_8;
	float P_8_9;
	float P_8_10;
	float P_8_11;
	float P_8_12;
	float P_8_13;
	float P_8_14;
	float P_8_15;
	float P_8_16;
	float P_8_17;
};

#define LOG_SM_43_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_43), "SM43",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_43 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_8_18;
	float P_8_19;
	float P_8_20;
	float P_8_21;
	float P_8_22;
	float P_8_23;
	float P_9_0;
	float P_9_1;
	float P_9_2;
	float P_9_3;
	float P_9_4;
	float P_9_5;
	float P_9_6;
	float P_9_7;
	float P_9_8;
};

#define LOG_SM_44_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_44), "SM44",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_44 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_9_9;
	float P_9_10;
	float P_9_11;
	float P_9_12;
	float P_9_13;
	float P_9_14;
	float P_9_15;
	float P_9_16;
	float P_9_17;
	float P_9_18;
	float P_9_19;
	float P_9_20;
	float P_9_21;
	float P_9_22;
	float P_9_23;
};

#define LOG_SM_45_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_45), "SM45",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_45 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_10_0;
	float P_10_1;
	float P_10_2;
	float P_10_3;
	float P_10_4;
	float P_10_5;
	float P_10_6;
	float P_10_7;
	float P_10_8;
	float P_10_9;
	float P_10_10;
	float P_10_11;
	float P_10_12;
	float P_10_13;
	float P_10_14;
};

#define LOG_SM_46_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_46), "SM46",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_46 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_10_15;
	float P_10_16;
	float P_10_17;
	float P_10_18;
	float P_10_19;
	float P_10_20;
	float P_10_21;
	float P_10_22;
	float P_10_23;
	float P_11_0;
	float P_11_1;
	float P_11_2;
	float P_11_3;
	float P_11_4;
	float P_11_5;
};

#define LOG_SM_47_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_47), "SM47",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_47 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_11_6;
	float P_11_7;
	float P_11_8;
	float P_11_9;
	float P_11_10;
	float P_11_11;
	float P_11_12;
	float P_11_13;
	float P_11_14;
	float P_11_15;
	float P_11_16;
	float P_11_17;
	float P_11_18;
	float P_11_19;
	float P_11_20;
};

#define LOG_SM_48_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_48), "SM48",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_48 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_11_21;
	float P_11_22;
	float P_11_23;
	float P_12_0;
	float P_12_1;
	float P_12_2;
	float P_12_3;
	float P_12_4;
	float P_12_5;
	float P_12_6;
	float P_12_7;
	float P_12_8;
	float P_12_9;
	float P_12_10;
	float P_12_11;
};

#define LOG_SM_49_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_49), "SM49",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_49 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_12_12;
	float P_12_13;
	float P_12_14;
	float P_12_15;
	float P_12_16;
	float P_12_17;
	float P_12_18;
	float P_12_19;
	float P_12_20;
	float P_12_21;
	float P_12_22;
	float P_12_23;
	float P_13_0;
	float P_13_1;
	float P_13_2;
};

#define LOG_SM_50_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_50), "SM50",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_50 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_13_3;
	float P_13_4;
	float P_13_5;
	float P_13_6;
	float P_13_7;
	float P_13_8;
	float P_13_9;
	float P_13_10;
	float P_13_11;
	float P_13_12;
	float P_13_13;
	float P_13_14;
	float P_13_15;
	float P_13_16;
	float P_13_17;
};

#define LOG_SM_51_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_51), "SM51",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_51 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_13_18;
	float P_13_19;
	float P_13_20;
	float P_13_21;
	float P_13_22;
	float P_13_23;
	float P_14_0;
	float P_14_1;
	float P_14_2;
	float P_14_3;
	float P_14_4;
	float P_14_5;
	float P_14_6;
	float P_14_7;
	float P_14_8;
};

#define LOG_SM_52_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_52), "SM52",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_52 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_14_9;
	float P_14_10;
	float P_14_11;
	float P_14_12;
	float P_14_13;
	float P_14_14;
	float P_14_15;
	float P_14_16;
	float P_14_17;
	float P_14_18;
	float P_14_19;
	float P_14_20;
	float P_14_21;
	float P_14_22;
	float P_14_23;
};

#define LOG_SM_53_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_53), "SM53",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_53 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_15_0;
	float P_15_1;
	float P_15_2;
	float P_15_3;
	float P_15_4;
	float P_15_5;
	float P_15_6;
	float P_15_7;
	float P_15_8;
	float P_15_9;
	float P_15_10;
	float P_15_11;
	float P_15_12;
	float P_15_13;
	float P_15_14;
};

#define LOG_SM_54_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_54), "SM54",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_54 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_15_15;
	float P_15_16;
	float P_15_17;
	float P_15_18;
	float P_15_19;
	float P_15_20;
	float P_15_21;
	float P_15_22;
	float P_15_23;
	float P_16_0;
	float P_16_1;
	float P_16_2;
	float P_16_3;
	float P_16_4;
	float P_16_5;
};

#define LOG_SM_55_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_55), "SM55",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_55 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_16_6;
	float P_16_7;
	float P_16_8;
	float P_16_9;
	float P_16_10;
	float P_16_11;
	float P_16_12;
	float P_16_13;
	float P_16_14;
	float P_16_15;
	float P_16_16;
	float P_16_17;
	float P_16_18;
	float P_16_19;
	float P_16_20;
};

#define LOG_SM_56_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_56), "SM56",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_56 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_16_21;
	float P_16_22;
	float P_16_23;
	float P_17_0;
	float P_17_1;
	float P_17_2;
	float P_17_3;
	float P_17_4;
	float P_17_5;
	float P_17_6;
	float P_17_7;
	float P_17_8;
	float P_17_9;
	float P_17_10;
	float P_17_11;
};

#define LOG_SM_57_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_57), "SM57",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_57 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_17_12;
	float P_17_13;
	float P_17_14;
	float P_17_15;
	float P_17_16;
	float P_17_17;
	float P_17_18;
	float P_17_19;
	float P_17_20;
	float P_17_21;
	float P_17_22;
	float P_17_23;
	float P_18_0;
	float P_18_1;
	float P_18_2;
};

#define LOG_SM_58_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_58), "SM58",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_58 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_18_3;
	float P_18_4;
	float P_18_5;
	float P_18_6;
	float P_18_7;
	float P_18_8;
	float P_18_9;
	float P_18_10;
	float P_18_11;
	float P_18_12;
	float P_18_13;
	float P_18_14;
	float P_18_15;
	float P_18_16;
	float P_18_17;
};

#define LOG_SM_59_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_59), "SM59",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_59 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_18_18;
	float P_18_19;
	float P_18_20;
	float P_18_21;
	float P_18_22;
	float P_18_23;
	float P_19_0;
	float P_19_1;
	float P_19_2;
	float P_19_3;
	float P_19_4;
	float P_19_5;
	float P_19_6;
	float P_19_7;
	float P_19_8;
};

#define LOG_SM_60_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_60), "SM60",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_60 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_19_9;
	float P_19_10;
	float P_19_11;
	float P_19_12;
	float P_19_13;
	float P_19_14;
	float P_19_15;
	float P_19_16;
	float P_19_17;
	float P_19_18;
	float P_19_19;
	float P_19_20;
	float P_19_21;
	float P_19_22;
	float P_19_23;
};

#define LOG_SM_61_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_61), "SM61",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_61 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_20_0;
	float P_20_1;
	float P_20_2;
	float P_20_3;
	float P_20_4;
	float P_20_5;
	float P_20_6;
	float P_20_7;
	float P_20_8;
	float P_20_9;
	float P_20_10;
	float P_20_11;
	float P_20_12;
	float P_20_13;
	float P_20_14;
};

#define LOG_SM_62_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_62), "SM62",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_62 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_20_15;
	float P_20_16;
	float P_20_17;
	float P_20_18;
	float P_20_19;
	float P_20_20;
	float P_20_21;
	float P_20_22;
	float P_20_23;
	float P_21_0;
	float P_21_1;
	float P_21_2;
	float P_21_3;
	float P_21_4;
	float P_21_5;
};

#define LOG_SM_63_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_63), "SM63",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_63 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_21_6;
	float P_21_7;
	float P_21_8;
	float P_21_9;
	float P_21_10;
	float P_21_11;
	float P_21_12;
	float P_21_13;
	float P_21_14;
	float P_21_15;
	float P_21_16;
	float P_21_17;
	float P_21_18;
	float P_21_19;
	float P_21_20;
};

#define LOG_SM_64_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_64), "SM64",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_64 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_21_21;
	float P_21_22;
	float P_21_23;
	float P_22_0;
	float P_22_1;
	float P_22_2;
	float P_22_3;
	float P_22_4;
	float P_22_5;
	float P_22_6;
	float P_22_7;
	float P_22_8;
	float P_22_9;
	float P_22_10;
	float P_22_11;
};

#define LOG_SM_65_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_65), "SM65",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_65 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_22_12;
	float P_22_13;
	float P_22_14;
	float P_22_15;
	float P_22_16;
	float P_22_17;
	float P_22_18;
	float P_22_19;
	float P_22_20;
	float P_22_21;
	float P_22_22;
	float P_22_23;
	float P_23_0;
	float P_23_1;
	float P_23_2;
};

#define LOG_SM_66_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_66), "SM66",\
	"Qfffffffffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15","s---------------","F000000000000000"}

struct PACKED log_SM_66 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_23_3;
	float P_23_4;
	float P_23_5;
	float P_23_6;
	float P_23_7;
	float P_23_8;
	float P_23_9;
	float P_23_10;
	float P_23_11;
	float P_23_12;
	float P_23_13;
	float P_23_14;
	float P_23_15;
	float P_23_16;
	float P_23_17;
};

#define LOG_SM_67_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_SM_67), "SM67",\
	"Qffffff","t,1,2,3,4,5,6","s------","F000000"}

struct PACKED log_SM_67 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float P_23_18;
	float P_23_19;
	float P_23_20;
	float P_23_21;
	float P_23_22;
	float P_23_23;
};

=============== AP_LOGGER_H====================

void Write_setWindMagStateLearningMode7(float P_0_0,float P_0_1,float P_0_2,float P_0_3,float P_0_4,float P_0_5,float P_0_6,float P_0_7,float P_0_8,float P_0_9,float P_0_10,float P_0_11,float P_0_12,float P_0_13,float P_0_14);


void Write_setWindMagStateLearningMode8(float P_0_15,float P_0_16,float P_0_17,float P_0_18,float P_0_19,float P_0_20,float P_0_21,float P_0_22,float P_0_23,float P_1_0,float P_1_1,float P_1_2,float P_1_3,float P_1_4,float P_1_5);


void Write_setWindMagStateLearningMode9(float P_1_6,float P_1_7,float P_1_8,float P_1_9,float P_1_10,float P_1_11,float P_1_12,float P_1_13,float P_1_14,float P_1_15,float P_1_16,float P_1_17,float P_1_18,float P_1_19,float P_1_20);


void Write_setWindMagStateLearningMode10(float P_1_21,float P_1_22,float P_1_23,float P_2_0,float P_2_1,float P_2_2,float P_2_3,float P_2_4,float P_2_5,float P_2_6,float P_2_7,float P_2_8,float P_2_9,float P_2_10,float P_2_11);


void Write_setWindMagStateLearningMode11(float P_2_12,float P_2_13,float P_2_14,float P_2_15,float P_2_16,float P_2_17,float P_2_18,float P_2_19,float P_2_20,float P_2_21,float P_2_22,float P_2_23,float P_3_0,float P_3_1,float P_3_2);


void Write_setWindMagStateLearningMode12(float P_3_3,float P_3_4,float P_3_5,float P_3_6,float P_3_7,float P_3_8,float P_3_9,float P_3_10,float P_3_11,float P_3_12,float P_3_13,float P_3_14,float P_3_15,float P_3_16,float P_3_17);


void Write_setWindMagStateLearningMode13(float P_3_18,float P_3_19,float P_3_20,float P_3_21,float P_3_22,float P_3_23,float P_4_0,float P_4_1,float P_4_2,float P_4_3,float P_4_4,float P_4_5,float P_4_6,float P_4_7,float P_4_8);


void Write_setWindMagStateLearningMode14(float P_4_9,float P_4_10,float P_4_11,float P_4_12,float P_4_13,float P_4_14,float P_4_15,float P_4_16,float P_4_17,float P_4_18,float P_4_19,float P_4_20,float P_4_21,float P_4_22,float P_4_23);


void Write_setWindMagStateLearningMode15(float P_5_0,float P_5_1,float P_5_2,float P_5_3,float P_5_4,float P_5_5,float P_5_6,float P_5_7,float P_5_8,float P_5_9,float P_5_10,float P_5_11,float P_5_12,float P_5_13,float P_5_14);


void Write_setWindMagStateLearningMode16(float P_5_15,float P_5_16,float P_5_17,float P_5_18,float P_5_19,float P_5_20,float P_5_21,float P_5_22,float P_5_23,float P_6_0,float P_6_1,float P_6_2,float P_6_3,float P_6_4,float P_6_5);


void Write_setWindMagStateLearningMode17(float P_6_6,float P_6_7,float P_6_8,float P_6_9,float P_6_10,float P_6_11,float P_6_12,float P_6_13,float P_6_14,float P_6_15,float P_6_16,float P_6_17,float P_6_18,float P_6_19,float P_6_20);


void Write_setWindMagStateLearningMode18(float P_6_21,float P_6_22,float P_6_23,float P_7_0,float P_7_1,float P_7_2,float P_7_3,float P_7_4,float P_7_5,float P_7_6,float P_7_7,float P_7_8,float P_7_9,float P_7_10,float P_7_11);


void Write_setWindMagStateLearningMode19(float P_7_12,float P_7_13,float P_7_14,float P_7_15,float P_7_16,float P_7_17,float P_7_18,float P_7_19,float P_7_20,float P_7_21,float P_7_22,float P_7_23,float P_8_0,float P_8_1,float P_8_2);


void Write_setWindMagStateLearningMode20(float P_8_3,float P_8_4,float P_8_5,float P_8_6,float P_8_7,float P_8_8,float P_8_9,float P_8_10,float P_8_11,float P_8_12,float P_8_13,float P_8_14,float P_8_15,float P_8_16,float P_8_17);


void Write_setWindMagStateLearningMode21(float P_8_18,float P_8_19,float P_8_20,float P_8_21,float P_8_22,float P_8_23,float P_9_0,float P_9_1,float P_9_2,float P_9_3,float P_9_4,float P_9_5,float P_9_6,float P_9_7,float P_9_8);


void Write_setWindMagStateLearningMode22(float P_9_9,float P_9_10,float P_9_11,float P_9_12,float P_9_13,float P_9_14,float P_9_15,float P_9_16,float P_9_17,float P_9_18,float P_9_19,float P_9_20,float P_9_21,float P_9_22,float P_9_23);


void Write_setWindMagStateLearningMode23(float P_10_0,float P_10_1,float P_10_2,float P_10_3,float P_10_4,float P_10_5,float P_10_6,float P_10_7,float P_10_8,float P_10_9,float P_10_10,float P_10_11,float P_10_12,float P_10_13,float P_10_14);


void Write_setWindMagStateLearningMode24(float P_10_15,float P_10_16,float P_10_17,float P_10_18,float P_10_19,float P_10_20,float P_10_21,float P_10_22,float P_10_23,float P_11_0,float P_11_1,float P_11_2,float P_11_3,float P_11_4,float P_11_5);


void Write_setWindMagStateLearningMode25(float P_11_6,float P_11_7,float P_11_8,float P_11_9,float P_11_10,float P_11_11,float P_11_12,float P_11_13,float P_11_14,float P_11_15,float P_11_16,float P_11_17,float P_11_18,float P_11_19,float P_11_20);


void Write_setWindMagStateLearningMode26(float P_11_21,float P_11_22,float P_11_23,float P_12_0,float P_12_1,float P_12_2,float P_12_3,float P_12_4,float P_12_5,float P_12_6,float P_12_7,float P_12_8,float P_12_9,float P_12_10,float P_12_11);


void Write_setWindMagStateLearningMode27(float P_12_12,float P_12_13,float P_12_14,float P_12_15,float P_12_16,float P_12_17,float P_12_18,float P_12_19,float P_12_20,float P_12_21,float P_12_22,float P_12_23,float P_13_0,float P_13_1,float P_13_2);


void Write_setWindMagStateLearningMode28(float P_13_3,float P_13_4,float P_13_5,float P_13_6,float P_13_7,float P_13_8,float P_13_9,float P_13_10,float P_13_11,float P_13_12,float P_13_13,float P_13_14,float P_13_15,float P_13_16,float P_13_17);


void Write_setWindMagStateLearningMode29(float P_13_18,float P_13_19,float P_13_20,float P_13_21,float P_13_22,float P_13_23,float P_14_0,float P_14_1,float P_14_2,float P_14_3,float P_14_4,float P_14_5,float P_14_6,float P_14_7,float P_14_8);


void Write_setWindMagStateLearningMode30(float P_14_9,float P_14_10,float P_14_11,float P_14_12,float P_14_13,float P_14_14,float P_14_15,float P_14_16,float P_14_17,float P_14_18,float P_14_19,float P_14_20,float P_14_21,float P_14_22,float P_14_23);


void Write_setWindMagStateLearningMode31(float P_15_0,float P_15_1,float P_15_2,float P_15_3,float P_15_4,float P_15_5,float P_15_6,float P_15_7,float P_15_8,float P_15_9,float P_15_10,float P_15_11,float P_15_12,float P_15_13,float P_15_14);


void Write_setWindMagStateLearningMode32(float P_15_15,float P_15_16,float P_15_17,float P_15_18,float P_15_19,float P_15_20,float P_15_21,float P_15_22,float P_15_23,float P_16_0,float P_16_1,float P_16_2,float P_16_3,float P_16_4,float P_16_5);


void Write_setWindMagStateLearningMode33(float P_16_6,float P_16_7,float P_16_8,float P_16_9,float P_16_10,float P_16_11,float P_16_12,float P_16_13,float P_16_14,float P_16_15,float P_16_16,float P_16_17,float P_16_18,float P_16_19,float P_16_20);


void Write_setWindMagStateLearningMode34(float P_16_21,float P_16_22,float P_16_23,float P_17_0,float P_17_1,float P_17_2,float P_17_3,float P_17_4,float P_17_5,float P_17_6,float P_17_7,float P_17_8,float P_17_9,float P_17_10,float P_17_11);


void Write_setWindMagStateLearningMode35(float P_17_12,float P_17_13,float P_17_14,float P_17_15,float P_17_16,float P_17_17,float P_17_18,float P_17_19,float P_17_20,float P_17_21,float P_17_22,float P_17_23,float P_18_0,float P_18_1,float P_18_2);


void Write_setWindMagStateLearningMode36(float P_18_3,float P_18_4,float P_18_5,float P_18_6,float P_18_7,float P_18_8,float P_18_9,float P_18_10,float P_18_11,float P_18_12,float P_18_13,float P_18_14,float P_18_15,float P_18_16,float P_18_17);


void Write_setWindMagStateLearningMode37(float P_18_18,float P_18_19,float P_18_20,float P_18_21,float P_18_22,float P_18_23,float P_19_0,float P_19_1,float P_19_2,float P_19_3,float P_19_4,float P_19_5,float P_19_6,float P_19_7,float P_19_8);


void Write_setWindMagStateLearningMode38(float P_19_9,float P_19_10,float P_19_11,float P_19_12,float P_19_13,float P_19_14,float P_19_15,float P_19_16,float P_19_17,float P_19_18,float P_19_19,float P_19_20,float P_19_21,float P_19_22,float P_19_23);


void Write_setWindMagStateLearningMode39(float P_20_0,float P_20_1,float P_20_2,float P_20_3,float P_20_4,float P_20_5,float P_20_6,float P_20_7,float P_20_8,float P_20_9,float P_20_10,float P_20_11,float P_20_12,float P_20_13,float P_20_14);


void Write_setWindMagStateLearningMode40(float P_20_15,float P_20_16,float P_20_17,float P_20_18,float P_20_19,float P_20_20,float P_20_21,float P_20_22,float P_20_23,float P_21_0,float P_21_1,float P_21_2,float P_21_3,float P_21_4,float P_21_5);


void Write_setWindMagStateLearningMode41(float P_21_6,float P_21_7,float P_21_8,float P_21_9,float P_21_10,float P_21_11,float P_21_12,float P_21_13,float P_21_14,float P_21_15,float P_21_16,float P_21_17,float P_21_18,float P_21_19,float P_21_20);


void Write_setWindMagStateLearningMode42(float P_21_21,float P_21_22,float P_21_23,float P_22_0,float P_22_1,float P_22_2,float P_22_3,float P_22_4,float P_22_5,float P_22_6,float P_22_7,float P_22_8,float P_22_9,float P_22_10,float P_22_11);


void Write_setWindMagStateLearningMode43(float P_22_12,float P_22_13,float P_22_14,float P_22_15,float P_22_16,float P_22_17,float P_22_18,float P_22_19,float P_22_20,float P_22_21,float P_22_22,float P_22_23,float P_23_0,float P_23_1,float P_23_2);


void Write_setWindMagStateLearningMode44(float P_23_3,float P_23_4,float P_23_5,float P_23_6,float P_23_7,float P_23_8,float P_23_9,float P_23_10,float P_23_11,float P_23_12,float P_23_13,float P_23_14,float P_23_15,float P_23_16,float P_23_17);


void Write_setWindMagStateLearningMode45(float P_23_18,float P_23_19,float P_23_20,float P_23_21,float P_23_22,float P_23_23);


===============LOG_STRUCTURE.H=======================
NAO ESQUECER O SHOULD_LOG_EKF!!!!!

LOG_SM_29,
LOG_SM_30,
LOG_SM_31,
LOG_SM_32,
LOG_SM_33,
LOG_SM_34,
LOG_SM_35,
LOG_SM_36,
LOG_SM_37,
LOG_SM_38,
LOG_SM_39,
LOG_SM_40,
LOG_SM_41,
LOG_SM_42,
LOG_SM_43,
LOG_SM_44,
LOG_SM_45,
LOG_SM_46,
LOG_SM_47,
LOG_SM_48,
LOG_SM_49,
LOG_SM_50,
LOG_SM_51,
LOG_SM_52,
LOG_SM_53,
LOG_SM_54,
LOG_SM_55,
LOG_SM_56,
LOG_SM_57,
LOG_SM_58,
LOG_SM_59,
LOG_SM_60,
LOG_SM_61,
LOG_SM_62,
LOG_SM_63,
LOG_SM_64,
LOG_SM_65,
LOG_SM_66,
LOG_SM_67,
LOG_SM_29_BASE(LOG_SM_29),\
LOG_SM_30_BASE(LOG_SM_30),\
LOG_SM_31_BASE(LOG_SM_31),\
LOG_SM_32_BASE(LOG_SM_32),\
LOG_SM_33_BASE(LOG_SM_33),\
LOG_SM_34_BASE(LOG_SM_34),\
LOG_SM_35_BASE(LOG_SM_35),\
LOG_SM_36_BASE(LOG_SM_36),\
LOG_SM_37_BASE(LOG_SM_37),\
LOG_SM_38_BASE(LOG_SM_38),\
LOG_SM_39_BASE(LOG_SM_39),\
LOG_SM_40_BASE(LOG_SM_40),\
LOG_SM_41_BASE(LOG_SM_41),\
LOG_SM_42_BASE(LOG_SM_42),\
LOG_SM_43_BASE(LOG_SM_43),\
LOG_SM_44_BASE(LOG_SM_44),\
LOG_SM_45_BASE(LOG_SM_45),\
LOG_SM_46_BASE(LOG_SM_46),\
LOG_SM_47_BASE(LOG_SM_47),\
LOG_SM_48_BASE(LOG_SM_48),\
LOG_SM_49_BASE(LOG_SM_49),\
LOG_SM_50_BASE(LOG_SM_50),\
LOG_SM_51_BASE(LOG_SM_51),\
LOG_SM_52_BASE(LOG_SM_52),\
LOG_SM_53_BASE(LOG_SM_53),\
LOG_SM_54_BASE(LOG_SM_54),\
LOG_SM_55_BASE(LOG_SM_55),\
LOG_SM_56_BASE(LOG_SM_56),\
LOG_SM_57_BASE(LOG_SM_57),\
LOG_SM_58_BASE(LOG_SM_58),\
LOG_SM_59_BASE(LOG_SM_59),\
LOG_SM_60_BASE(LOG_SM_60),\
LOG_SM_61_BASE(LOG_SM_61),\
LOG_SM_62_BASE(LOG_SM_62),\
LOG_SM_63_BASE(LOG_SM_63),\
LOG_SM_64_BASE(LOG_SM_64),\
LOG_SM_65_BASE(LOG_SM_65),\
LOG_SM_66_BASE(LOG_SM_66),\
LOG_SM_67_BASE(LOG_SM_67),\


===============LOG_FILE_CPP====================

void AP_Logger::Write_setWindMagStateLearningMode7(
	float P_0_0,
	float P_0_1,
	float P_0_2,
	float P_0_3,
	float P_0_4,
	float P_0_5,
	float P_0_6,
	float P_0_7,
	float P_0_8,
	float P_0_9,
	float P_0_10,
	float P_0_11,
	float P_0_12,
	float P_0_13,
	float P_0_14)
{
	struct log_SM_29 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_29),
		time_us : AP_HAL::micros64(),
		P_0_0 : P_0_0,
		P_0_1 : P_0_1,
		P_0_2 : P_0_2,
		P_0_3 : P_0_3,
		P_0_4 : P_0_4,
		P_0_5 : P_0_5,
		P_0_6 : P_0_6,
		P_0_7 : P_0_7,
		P_0_8 : P_0_8,
		P_0_9 : P_0_9,
		P_0_10 : P_0_10,
		P_0_11 : P_0_11,
		P_0_12 : P_0_12,
		P_0_13 : P_0_13,
		P_0_14 : P_0_14
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode8(
	float P_0_15,
	float P_0_16,
	float P_0_17,
	float P_0_18,
	float P_0_19,
	float P_0_20,
	float P_0_21,
	float P_0_22,
	float P_0_23,
	float P_1_0,
	float P_1_1,
	float P_1_2,
	float P_1_3,
	float P_1_4,
	float P_1_5)
{
	struct log_SM_30 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_30),
		time_us : AP_HAL::micros64(),
		P_0_15 : P_0_15,
		P_0_16 : P_0_16,
		P_0_17 : P_0_17,
		P_0_18 : P_0_18,
		P_0_19 : P_0_19,
		P_0_20 : P_0_20,
		P_0_21 : P_0_21,
		P_0_22 : P_0_22,
		P_0_23 : P_0_23,
		P_1_0 : P_1_0,
		P_1_1 : P_1_1,
		P_1_2 : P_1_2,
		P_1_3 : P_1_3,
		P_1_4 : P_1_4,
		P_1_5 : P_1_5
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode9(
	float P_1_6,
	float P_1_7,
	float P_1_8,
	float P_1_9,
	float P_1_10,
	float P_1_11,
	float P_1_12,
	float P_1_13,
	float P_1_14,
	float P_1_15,
	float P_1_16,
	float P_1_17,
	float P_1_18,
	float P_1_19,
	float P_1_20)
{
	struct log_SM_31 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_31),
		time_us : AP_HAL::micros64(),
		P_1_6 : P_1_6,
		P_1_7 : P_1_7,
		P_1_8 : P_1_8,
		P_1_9 : P_1_9,
		P_1_10 : P_1_10,
		P_1_11 : P_1_11,
		P_1_12 : P_1_12,
		P_1_13 : P_1_13,
		P_1_14 : P_1_14,
		P_1_15 : P_1_15,
		P_1_16 : P_1_16,
		P_1_17 : P_1_17,
		P_1_18 : P_1_18,
		P_1_19 : P_1_19,
		P_1_20 : P_1_20
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode10(
	float P_1_21,
	float P_1_22,
	float P_1_23,
	float P_2_0,
	float P_2_1,
	float P_2_2,
	float P_2_3,
	float P_2_4,
	float P_2_5,
	float P_2_6,
	float P_2_7,
	float P_2_8,
	float P_2_9,
	float P_2_10,
	float P_2_11)
{
	struct log_SM_32 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_32),
		time_us : AP_HAL::micros64(),
		P_1_21 : P_1_21,
		P_1_22 : P_1_22,
		P_1_23 : P_1_23,
		P_2_0 : P_2_0,
		P_2_1 : P_2_1,
		P_2_2 : P_2_2,
		P_2_3 : P_2_3,
		P_2_4 : P_2_4,
		P_2_5 : P_2_5,
		P_2_6 : P_2_6,
		P_2_7 : P_2_7,
		P_2_8 : P_2_8,
		P_2_9 : P_2_9,
		P_2_10 : P_2_10,
		P_2_11 : P_2_11
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode11(
	float P_2_12,
	float P_2_13,
	float P_2_14,
	float P_2_15,
	float P_2_16,
	float P_2_17,
	float P_2_18,
	float P_2_19,
	float P_2_20,
	float P_2_21,
	float P_2_22,
	float P_2_23,
	float P_3_0,
	float P_3_1,
	float P_3_2)
{
	struct log_SM_33 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_33),
		time_us : AP_HAL::micros64(),
		P_2_12 : P_2_12,
		P_2_13 : P_2_13,
		P_2_14 : P_2_14,
		P_2_15 : P_2_15,
		P_2_16 : P_2_16,
		P_2_17 : P_2_17,
		P_2_18 : P_2_18,
		P_2_19 : P_2_19,
		P_2_20 : P_2_20,
		P_2_21 : P_2_21,
		P_2_22 : P_2_22,
		P_2_23 : P_2_23,
		P_3_0 : P_3_0,
		P_3_1 : P_3_1,
		P_3_2 : P_3_2
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode12(
	float P_3_3,
	float P_3_4,
	float P_3_5,
	float P_3_6,
	float P_3_7,
	float P_3_8,
	float P_3_9,
	float P_3_10,
	float P_3_11,
	float P_3_12,
	float P_3_13,
	float P_3_14,
	float P_3_15,
	float P_3_16,
	float P_3_17)
{
	struct log_SM_34 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_34),
		time_us : AP_HAL::micros64(),
		P_3_3 : P_3_3,
		P_3_4 : P_3_4,
		P_3_5 : P_3_5,
		P_3_6 : P_3_6,
		P_3_7 : P_3_7,
		P_3_8 : P_3_8,
		P_3_9 : P_3_9,
		P_3_10 : P_3_10,
		P_3_11 : P_3_11,
		P_3_12 : P_3_12,
		P_3_13 : P_3_13,
		P_3_14 : P_3_14,
		P_3_15 : P_3_15,
		P_3_16 : P_3_16,
		P_3_17 : P_3_17
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode13(
	float P_3_18,
	float P_3_19,
	float P_3_20,
	float P_3_21,
	float P_3_22,
	float P_3_23,
	float P_4_0,
	float P_4_1,
	float P_4_2,
	float P_4_3,
	float P_4_4,
	float P_4_5,
	float P_4_6,
	float P_4_7,
	float P_4_8)
{
	struct log_SM_35 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_35),
		time_us : AP_HAL::micros64(),
		P_3_18 : P_3_18,
		P_3_19 : P_3_19,
		P_3_20 : P_3_20,
		P_3_21 : P_3_21,
		P_3_22 : P_3_22,
		P_3_23 : P_3_23,
		P_4_0 : P_4_0,
		P_4_1 : P_4_1,
		P_4_2 : P_4_2,
		P_4_3 : P_4_3,
		P_4_4 : P_4_4,
		P_4_5 : P_4_5,
		P_4_6 : P_4_6,
		P_4_7 : P_4_7,
		P_4_8 : P_4_8
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode14(
	float P_4_9,
	float P_4_10,
	float P_4_11,
	float P_4_12,
	float P_4_13,
	float P_4_14,
	float P_4_15,
	float P_4_16,
	float P_4_17,
	float P_4_18,
	float P_4_19,
	float P_4_20,
	float P_4_21,
	float P_4_22,
	float P_4_23)
{
	struct log_SM_36 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_36),
		time_us : AP_HAL::micros64(),
		P_4_9 : P_4_9,
		P_4_10 : P_4_10,
		P_4_11 : P_4_11,
		P_4_12 : P_4_12,
		P_4_13 : P_4_13,
		P_4_14 : P_4_14,
		P_4_15 : P_4_15,
		P_4_16 : P_4_16,
		P_4_17 : P_4_17,
		P_4_18 : P_4_18,
		P_4_19 : P_4_19,
		P_4_20 : P_4_20,
		P_4_21 : P_4_21,
		P_4_22 : P_4_22,
		P_4_23 : P_4_23
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode15(
	float P_5_0,
	float P_5_1,
	float P_5_2,
	float P_5_3,
	float P_5_4,
	float P_5_5,
	float P_5_6,
	float P_5_7,
	float P_5_8,
	float P_5_9,
	float P_5_10,
	float P_5_11,
	float P_5_12,
	float P_5_13,
	float P_5_14)
{
	struct log_SM_37 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_37),
		time_us : AP_HAL::micros64(),
		P_5_0 : P_5_0,
		P_5_1 : P_5_1,
		P_5_2 : P_5_2,
		P_5_3 : P_5_3,
		P_5_4 : P_5_4,
		P_5_5 : P_5_5,
		P_5_6 : P_5_6,
		P_5_7 : P_5_7,
		P_5_8 : P_5_8,
		P_5_9 : P_5_9,
		P_5_10 : P_5_10,
		P_5_11 : P_5_11,
		P_5_12 : P_5_12,
		P_5_13 : P_5_13,
		P_5_14 : P_5_14
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode16(
	float P_5_15,
	float P_5_16,
	float P_5_17,
	float P_5_18,
	float P_5_19,
	float P_5_20,
	float P_5_21,
	float P_5_22,
	float P_5_23,
	float P_6_0,
	float P_6_1,
	float P_6_2,
	float P_6_3,
	float P_6_4,
	float P_6_5)
{
	struct log_SM_38 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_38),
		time_us : AP_HAL::micros64(),
		P_5_15 : P_5_15,
		P_5_16 : P_5_16,
		P_5_17 : P_5_17,
		P_5_18 : P_5_18,
		P_5_19 : P_5_19,
		P_5_20 : P_5_20,
		P_5_21 : P_5_21,
		P_5_22 : P_5_22,
		P_5_23 : P_5_23,
		P_6_0 : P_6_0,
		P_6_1 : P_6_1,
		P_6_2 : P_6_2,
		P_6_3 : P_6_3,
		P_6_4 : P_6_4,
		P_6_5 : P_6_5
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode17(
	float P_6_6,
	float P_6_7,
	float P_6_8,
	float P_6_9,
	float P_6_10,
	float P_6_11,
	float P_6_12,
	float P_6_13,
	float P_6_14,
	float P_6_15,
	float P_6_16,
	float P_6_17,
	float P_6_18,
	float P_6_19,
	float P_6_20)
{
	struct log_SM_39 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_39),
		time_us : AP_HAL::micros64(),
		P_6_6 : P_6_6,
		P_6_7 : P_6_7,
		P_6_8 : P_6_8,
		P_6_9 : P_6_9,
		P_6_10 : P_6_10,
		P_6_11 : P_6_11,
		P_6_12 : P_6_12,
		P_6_13 : P_6_13,
		P_6_14 : P_6_14,
		P_6_15 : P_6_15,
		P_6_16 : P_6_16,
		P_6_17 : P_6_17,
		P_6_18 : P_6_18,
		P_6_19 : P_6_19,
		P_6_20 : P_6_20
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode18(
	float P_6_21,
	float P_6_22,
	float P_6_23,
	float P_7_0,
	float P_7_1,
	float P_7_2,
	float P_7_3,
	float P_7_4,
	float P_7_5,
	float P_7_6,
	float P_7_7,
	float P_7_8,
	float P_7_9,
	float P_7_10,
	float P_7_11)
{
	struct log_SM_40 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_40),
		time_us : AP_HAL::micros64(),
		P_6_21 : P_6_21,
		P_6_22 : P_6_22,
		P_6_23 : P_6_23,
		P_7_0 : P_7_0,
		P_7_1 : P_7_1,
		P_7_2 : P_7_2,
		P_7_3 : P_7_3,
		P_7_4 : P_7_4,
		P_7_5 : P_7_5,
		P_7_6 : P_7_6,
		P_7_7 : P_7_7,
		P_7_8 : P_7_8,
		P_7_9 : P_7_9,
		P_7_10 : P_7_10,
		P_7_11 : P_7_11
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode19(
	float P_7_12,
	float P_7_13,
	float P_7_14,
	float P_7_15,
	float P_7_16,
	float P_7_17,
	float P_7_18,
	float P_7_19,
	float P_7_20,
	float P_7_21,
	float P_7_22,
	float P_7_23,
	float P_8_0,
	float P_8_1,
	float P_8_2)
{
	struct log_SM_41 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_41),
		time_us : AP_HAL::micros64(),
		P_7_12 : P_7_12,
		P_7_13 : P_7_13,
		P_7_14 : P_7_14,
		P_7_15 : P_7_15,
		P_7_16 : P_7_16,
		P_7_17 : P_7_17,
		P_7_18 : P_7_18,
		P_7_19 : P_7_19,
		P_7_20 : P_7_20,
		P_7_21 : P_7_21,
		P_7_22 : P_7_22,
		P_7_23 : P_7_23,
		P_8_0 : P_8_0,
		P_8_1 : P_8_1,
		P_8_2 : P_8_2
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode20(
	float P_8_3,
	float P_8_4,
	float P_8_5,
	float P_8_6,
	float P_8_7,
	float P_8_8,
	float P_8_9,
	float P_8_10,
	float P_8_11,
	float P_8_12,
	float P_8_13,
	float P_8_14,
	float P_8_15,
	float P_8_16,
	float P_8_17)
{
	struct log_SM_42 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_42),
		time_us : AP_HAL::micros64(),
		P_8_3 : P_8_3,
		P_8_4 : P_8_4,
		P_8_5 : P_8_5,
		P_8_6 : P_8_6,
		P_8_7 : P_8_7,
		P_8_8 : P_8_8,
		P_8_9 : P_8_9,
		P_8_10 : P_8_10,
		P_8_11 : P_8_11,
		P_8_12 : P_8_12,
		P_8_13 : P_8_13,
		P_8_14 : P_8_14,
		P_8_15 : P_8_15,
		P_8_16 : P_8_16,
		P_8_17 : P_8_17
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode21(
	float P_8_18,
	float P_8_19,
	float P_8_20,
	float P_8_21,
	float P_8_22,
	float P_8_23,
	float P_9_0,
	float P_9_1,
	float P_9_2,
	float P_9_3,
	float P_9_4,
	float P_9_5,
	float P_9_6,
	float P_9_7,
	float P_9_8)
{
	struct log_SM_43 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_43),
		time_us : AP_HAL::micros64(),
		P_8_18 : P_8_18,
		P_8_19 : P_8_19,
		P_8_20 : P_8_20,
		P_8_21 : P_8_21,
		P_8_22 : P_8_22,
		P_8_23 : P_8_23,
		P_9_0 : P_9_0,
		P_9_1 : P_9_1,
		P_9_2 : P_9_2,
		P_9_3 : P_9_3,
		P_9_4 : P_9_4,
		P_9_5 : P_9_5,
		P_9_6 : P_9_6,
		P_9_7 : P_9_7,
		P_9_8 : P_9_8
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode22(
	float P_9_9,
	float P_9_10,
	float P_9_11,
	float P_9_12,
	float P_9_13,
	float P_9_14,
	float P_9_15,
	float P_9_16,
	float P_9_17,
	float P_9_18,
	float P_9_19,
	float P_9_20,
	float P_9_21,
	float P_9_22,
	float P_9_23)
{
	struct log_SM_44 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_44),
		time_us : AP_HAL::micros64(),
		P_9_9 : P_9_9,
		P_9_10 : P_9_10,
		P_9_11 : P_9_11,
		P_9_12 : P_9_12,
		P_9_13 : P_9_13,
		P_9_14 : P_9_14,
		P_9_15 : P_9_15,
		P_9_16 : P_9_16,
		P_9_17 : P_9_17,
		P_9_18 : P_9_18,
		P_9_19 : P_9_19,
		P_9_20 : P_9_20,
		P_9_21 : P_9_21,
		P_9_22 : P_9_22,
		P_9_23 : P_9_23
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode23(
	float P_10_0,
	float P_10_1,
	float P_10_2,
	float P_10_3,
	float P_10_4,
	float P_10_5,
	float P_10_6,
	float P_10_7,
	float P_10_8,
	float P_10_9,
	float P_10_10,
	float P_10_11,
	float P_10_12,
	float P_10_13,
	float P_10_14)
{
	struct log_SM_45 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_45),
		time_us : AP_HAL::micros64(),
		P_10_0 : P_10_0,
		P_10_1 : P_10_1,
		P_10_2 : P_10_2,
		P_10_3 : P_10_3,
		P_10_4 : P_10_4,
		P_10_5 : P_10_5,
		P_10_6 : P_10_6,
		P_10_7 : P_10_7,
		P_10_8 : P_10_8,
		P_10_9 : P_10_9,
		P_10_10 : P_10_10,
		P_10_11 : P_10_11,
		P_10_12 : P_10_12,
		P_10_13 : P_10_13,
		P_10_14 : P_10_14
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode24(
	float P_10_15,
	float P_10_16,
	float P_10_17,
	float P_10_18,
	float P_10_19,
	float P_10_20,
	float P_10_21,
	float P_10_22,
	float P_10_23,
	float P_11_0,
	float P_11_1,
	float P_11_2,
	float P_11_3,
	float P_11_4,
	float P_11_5)
{
	struct log_SM_46 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_46),
		time_us : AP_HAL::micros64(),
		P_10_15 : P_10_15,
		P_10_16 : P_10_16,
		P_10_17 : P_10_17,
		P_10_18 : P_10_18,
		P_10_19 : P_10_19,
		P_10_20 : P_10_20,
		P_10_21 : P_10_21,
		P_10_22 : P_10_22,
		P_10_23 : P_10_23,
		P_11_0 : P_11_0,
		P_11_1 : P_11_1,
		P_11_2 : P_11_2,
		P_11_3 : P_11_3,
		P_11_4 : P_11_4,
		P_11_5 : P_11_5
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode25(
	float P_11_6,
	float P_11_7,
	float P_11_8,
	float P_11_9,
	float P_11_10,
	float P_11_11,
	float P_11_12,
	float P_11_13,
	float P_11_14,
	float P_11_15,
	float P_11_16,
	float P_11_17,
	float P_11_18,
	float P_11_19,
	float P_11_20)
{
	struct log_SM_47 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_47),
		time_us : AP_HAL::micros64(),
		P_11_6 : P_11_6,
		P_11_7 : P_11_7,
		P_11_8 : P_11_8,
		P_11_9 : P_11_9,
		P_11_10 : P_11_10,
		P_11_11 : P_11_11,
		P_11_12 : P_11_12,
		P_11_13 : P_11_13,
		P_11_14 : P_11_14,
		P_11_15 : P_11_15,
		P_11_16 : P_11_16,
		P_11_17 : P_11_17,
		P_11_18 : P_11_18,
		P_11_19 : P_11_19,
		P_11_20 : P_11_20
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode26(
	float P_11_21,
	float P_11_22,
	float P_11_23,
	float P_12_0,
	float P_12_1,
	float P_12_2,
	float P_12_3,
	float P_12_4,
	float P_12_5,
	float P_12_6,
	float P_12_7,
	float P_12_8,
	float P_12_9,
	float P_12_10,
	float P_12_11)
{
	struct log_SM_48 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_48),
		time_us : AP_HAL::micros64(),
		P_11_21 : P_11_21,
		P_11_22 : P_11_22,
		P_11_23 : P_11_23,
		P_12_0 : P_12_0,
		P_12_1 : P_12_1,
		P_12_2 : P_12_2,
		P_12_3 : P_12_3,
		P_12_4 : P_12_4,
		P_12_5 : P_12_5,
		P_12_6 : P_12_6,
		P_12_7 : P_12_7,
		P_12_8 : P_12_8,
		P_12_9 : P_12_9,
		P_12_10 : P_12_10,
		P_12_11 : P_12_11
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode27(
	float P_12_12,
	float P_12_13,
	float P_12_14,
	float P_12_15,
	float P_12_16,
	float P_12_17,
	float P_12_18,
	float P_12_19,
	float P_12_20,
	float P_12_21,
	float P_12_22,
	float P_12_23,
	float P_13_0,
	float P_13_1,
	float P_13_2)
{
	struct log_SM_49 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_49),
		time_us : AP_HAL::micros64(),
		P_12_12 : P_12_12,
		P_12_13 : P_12_13,
		P_12_14 : P_12_14,
		P_12_15 : P_12_15,
		P_12_16 : P_12_16,
		P_12_17 : P_12_17,
		P_12_18 : P_12_18,
		P_12_19 : P_12_19,
		P_12_20 : P_12_20,
		P_12_21 : P_12_21,
		P_12_22 : P_12_22,
		P_12_23 : P_12_23,
		P_13_0 : P_13_0,
		P_13_1 : P_13_1,
		P_13_2 : P_13_2
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode28(
	float P_13_3,
	float P_13_4,
	float P_13_5,
	float P_13_6,
	float P_13_7,
	float P_13_8,
	float P_13_9,
	float P_13_10,
	float P_13_11,
	float P_13_12,
	float P_13_13,
	float P_13_14,
	float P_13_15,
	float P_13_16,
	float P_13_17)
{
	struct log_SM_50 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_50),
		time_us : AP_HAL::micros64(),
		P_13_3 : P_13_3,
		P_13_4 : P_13_4,
		P_13_5 : P_13_5,
		P_13_6 : P_13_6,
		P_13_7 : P_13_7,
		P_13_8 : P_13_8,
		P_13_9 : P_13_9,
		P_13_10 : P_13_10,
		P_13_11 : P_13_11,
		P_13_12 : P_13_12,
		P_13_13 : P_13_13,
		P_13_14 : P_13_14,
		P_13_15 : P_13_15,
		P_13_16 : P_13_16,
		P_13_17 : P_13_17
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode29(
	float P_13_18,
	float P_13_19,
	float P_13_20,
	float P_13_21,
	float P_13_22,
	float P_13_23,
	float P_14_0,
	float P_14_1,
	float P_14_2,
	float P_14_3,
	float P_14_4,
	float P_14_5,
	float P_14_6,
	float P_14_7,
	float P_14_8)
{
	struct log_SM_51 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_51),
		time_us : AP_HAL::micros64(),
		P_13_18 : P_13_18,
		P_13_19 : P_13_19,
		P_13_20 : P_13_20,
		P_13_21 : P_13_21,
		P_13_22 : P_13_22,
		P_13_23 : P_13_23,
		P_14_0 : P_14_0,
		P_14_1 : P_14_1,
		P_14_2 : P_14_2,
		P_14_3 : P_14_3,
		P_14_4 : P_14_4,
		P_14_5 : P_14_5,
		P_14_6 : P_14_6,
		P_14_7 : P_14_7,
		P_14_8 : P_14_8
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode30(
	float P_14_9,
	float P_14_10,
	float P_14_11,
	float P_14_12,
	float P_14_13,
	float P_14_14,
	float P_14_15,
	float P_14_16,
	float P_14_17,
	float P_14_18,
	float P_14_19,
	float P_14_20,
	float P_14_21,
	float P_14_22,
	float P_14_23)
{
	struct log_SM_52 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_52),
		time_us : AP_HAL::micros64(),
		P_14_9 : P_14_9,
		P_14_10 : P_14_10,
		P_14_11 : P_14_11,
		P_14_12 : P_14_12,
		P_14_13 : P_14_13,
		P_14_14 : P_14_14,
		P_14_15 : P_14_15,
		P_14_16 : P_14_16,
		P_14_17 : P_14_17,
		P_14_18 : P_14_18,
		P_14_19 : P_14_19,
		P_14_20 : P_14_20,
		P_14_21 : P_14_21,
		P_14_22 : P_14_22,
		P_14_23 : P_14_23
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode31(
	float P_15_0,
	float P_15_1,
	float P_15_2,
	float P_15_3,
	float P_15_4,
	float P_15_5,
	float P_15_6,
	float P_15_7,
	float P_15_8,
	float P_15_9,
	float P_15_10,
	float P_15_11,
	float P_15_12,
	float P_15_13,
	float P_15_14)
{
	struct log_SM_53 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_53),
		time_us : AP_HAL::micros64(),
		P_15_0 : P_15_0,
		P_15_1 : P_15_1,
		P_15_2 : P_15_2,
		P_15_3 : P_15_3,
		P_15_4 : P_15_4,
		P_15_5 : P_15_5,
		P_15_6 : P_15_6,
		P_15_7 : P_15_7,
		P_15_8 : P_15_8,
		P_15_9 : P_15_9,
		P_15_10 : P_15_10,
		P_15_11 : P_15_11,
		P_15_12 : P_15_12,
		P_15_13 : P_15_13,
		P_15_14 : P_15_14
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode32(
	float P_15_15,
	float P_15_16,
	float P_15_17,
	float P_15_18,
	float P_15_19,
	float P_15_20,
	float P_15_21,
	float P_15_22,
	float P_15_23,
	float P_16_0,
	float P_16_1,
	float P_16_2,
	float P_16_3,
	float P_16_4,
	float P_16_5)
{
	struct log_SM_54 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_54),
		time_us : AP_HAL::micros64(),
		P_15_15 : P_15_15,
		P_15_16 : P_15_16,
		P_15_17 : P_15_17,
		P_15_18 : P_15_18,
		P_15_19 : P_15_19,
		P_15_20 : P_15_20,
		P_15_21 : P_15_21,
		P_15_22 : P_15_22,
		P_15_23 : P_15_23,
		P_16_0 : P_16_0,
		P_16_1 : P_16_1,
		P_16_2 : P_16_2,
		P_16_3 : P_16_3,
		P_16_4 : P_16_4,
		P_16_5 : P_16_5
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode33(
	float P_16_6,
	float P_16_7,
	float P_16_8,
	float P_16_9,
	float P_16_10,
	float P_16_11,
	float P_16_12,
	float P_16_13,
	float P_16_14,
	float P_16_15,
	float P_16_16,
	float P_16_17,
	float P_16_18,
	float P_16_19,
	float P_16_20)
{
	struct log_SM_55 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_55),
		time_us : AP_HAL::micros64(),
		P_16_6 : P_16_6,
		P_16_7 : P_16_7,
		P_16_8 : P_16_8,
		P_16_9 : P_16_9,
		P_16_10 : P_16_10,
		P_16_11 : P_16_11,
		P_16_12 : P_16_12,
		P_16_13 : P_16_13,
		P_16_14 : P_16_14,
		P_16_15 : P_16_15,
		P_16_16 : P_16_16,
		P_16_17 : P_16_17,
		P_16_18 : P_16_18,
		P_16_19 : P_16_19,
		P_16_20 : P_16_20
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode34(
	float P_16_21,
	float P_16_22,
	float P_16_23,
	float P_17_0,
	float P_17_1,
	float P_17_2,
	float P_17_3,
	float P_17_4,
	float P_17_5,
	float P_17_6,
	float P_17_7,
	float P_17_8,
	float P_17_9,
	float P_17_10,
	float P_17_11)
{
	struct log_SM_56 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_56),
		time_us : AP_HAL::micros64(),
		P_16_21 : P_16_21,
		P_16_22 : P_16_22,
		P_16_23 : P_16_23,
		P_17_0 : P_17_0,
		P_17_1 : P_17_1,
		P_17_2 : P_17_2,
		P_17_3 : P_17_3,
		P_17_4 : P_17_4,
		P_17_5 : P_17_5,
		P_17_6 : P_17_6,
		P_17_7 : P_17_7,
		P_17_8 : P_17_8,
		P_17_9 : P_17_9,
		P_17_10 : P_17_10,
		P_17_11 : P_17_11
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode35(
	float P_17_12,
	float P_17_13,
	float P_17_14,
	float P_17_15,
	float P_17_16,
	float P_17_17,
	float P_17_18,
	float P_17_19,
	float P_17_20,
	float P_17_21,
	float P_17_22,
	float P_17_23,
	float P_18_0,
	float P_18_1,
	float P_18_2)
{
	struct log_SM_57 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_57),
		time_us : AP_HAL::micros64(),
		P_17_12 : P_17_12,
		P_17_13 : P_17_13,
		P_17_14 : P_17_14,
		P_17_15 : P_17_15,
		P_17_16 : P_17_16,
		P_17_17 : P_17_17,
		P_17_18 : P_17_18,
		P_17_19 : P_17_19,
		P_17_20 : P_17_20,
		P_17_21 : P_17_21,
		P_17_22 : P_17_22,
		P_17_23 : P_17_23,
		P_18_0 : P_18_0,
		P_18_1 : P_18_1,
		P_18_2 : P_18_2
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode36(
	float P_18_3,
	float P_18_4,
	float P_18_5,
	float P_18_6,
	float P_18_7,
	float P_18_8,
	float P_18_9,
	float P_18_10,
	float P_18_11,
	float P_18_12,
	float P_18_13,
	float P_18_14,
	float P_18_15,
	float P_18_16,
	float P_18_17)
{
	struct log_SM_58 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_58),
		time_us : AP_HAL::micros64(),
		P_18_3 : P_18_3,
		P_18_4 : P_18_4,
		P_18_5 : P_18_5,
		P_18_6 : P_18_6,
		P_18_7 : P_18_7,
		P_18_8 : P_18_8,
		P_18_9 : P_18_9,
		P_18_10 : P_18_10,
		P_18_11 : P_18_11,
		P_18_12 : P_18_12,
		P_18_13 : P_18_13,
		P_18_14 : P_18_14,
		P_18_15 : P_18_15,
		P_18_16 : P_18_16,
		P_18_17 : P_18_17
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode37(
	float P_18_18,
	float P_18_19,
	float P_18_20,
	float P_18_21,
	float P_18_22,
	float P_18_23,
	float P_19_0,
	float P_19_1,
	float P_19_2,
	float P_19_3,
	float P_19_4,
	float P_19_5,
	float P_19_6,
	float P_19_7,
	float P_19_8)
{
	struct log_SM_59 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_59),
		time_us : AP_HAL::micros64(),
		P_18_18 : P_18_18,
		P_18_19 : P_18_19,
		P_18_20 : P_18_20,
		P_18_21 : P_18_21,
		P_18_22 : P_18_22,
		P_18_23 : P_18_23,
		P_19_0 : P_19_0,
		P_19_1 : P_19_1,
		P_19_2 : P_19_2,
		P_19_3 : P_19_3,
		P_19_4 : P_19_4,
		P_19_5 : P_19_5,
		P_19_6 : P_19_6,
		P_19_7 : P_19_7,
		P_19_8 : P_19_8
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode38(
	float P_19_9,
	float P_19_10,
	float P_19_11,
	float P_19_12,
	float P_19_13,
	float P_19_14,
	float P_19_15,
	float P_19_16,
	float P_19_17,
	float P_19_18,
	float P_19_19,
	float P_19_20,
	float P_19_21,
	float P_19_22,
	float P_19_23)
{
	struct log_SM_60 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_60),
		time_us : AP_HAL::micros64(),
		P_19_9 : P_19_9,
		P_19_10 : P_19_10,
		P_19_11 : P_19_11,
		P_19_12 : P_19_12,
		P_19_13 : P_19_13,
		P_19_14 : P_19_14,
		P_19_15 : P_19_15,
		P_19_16 : P_19_16,
		P_19_17 : P_19_17,
		P_19_18 : P_19_18,
		P_19_19 : P_19_19,
		P_19_20 : P_19_20,
		P_19_21 : P_19_21,
		P_19_22 : P_19_22,
		P_19_23 : P_19_23
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode39(
	float P_20_0,
	float P_20_1,
	float P_20_2,
	float P_20_3,
	float P_20_4,
	float P_20_5,
	float P_20_6,
	float P_20_7,
	float P_20_8,
	float P_20_9,
	float P_20_10,
	float P_20_11,
	float P_20_12,
	float P_20_13,
	float P_20_14)
{
	struct log_SM_61 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_61),
		time_us : AP_HAL::micros64(),
		P_20_0 : P_20_0,
		P_20_1 : P_20_1,
		P_20_2 : P_20_2,
		P_20_3 : P_20_3,
		P_20_4 : P_20_4,
		P_20_5 : P_20_5,
		P_20_6 : P_20_6,
		P_20_7 : P_20_7,
		P_20_8 : P_20_8,
		P_20_9 : P_20_9,
		P_20_10 : P_20_10,
		P_20_11 : P_20_11,
		P_20_12 : P_20_12,
		P_20_13 : P_20_13,
		P_20_14 : P_20_14
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode40(
	float P_20_15,
	float P_20_16,
	float P_20_17,
	float P_20_18,
	float P_20_19,
	float P_20_20,
	float P_20_21,
	float P_20_22,
	float P_20_23,
	float P_21_0,
	float P_21_1,
	float P_21_2,
	float P_21_3,
	float P_21_4,
	float P_21_5)
{
	struct log_SM_62 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_62),
		time_us : AP_HAL::micros64(),
		P_20_15 : P_20_15,
		P_20_16 : P_20_16,
		P_20_17 : P_20_17,
		P_20_18 : P_20_18,
		P_20_19 : P_20_19,
		P_20_20 : P_20_20,
		P_20_21 : P_20_21,
		P_20_22 : P_20_22,
		P_20_23 : P_20_23,
		P_21_0 : P_21_0,
		P_21_1 : P_21_1,
		P_21_2 : P_21_2,
		P_21_3 : P_21_3,
		P_21_4 : P_21_4,
		P_21_5 : P_21_5
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode41(
	float P_21_6,
	float P_21_7,
	float P_21_8,
	float P_21_9,
	float P_21_10,
	float P_21_11,
	float P_21_12,
	float P_21_13,
	float P_21_14,
	float P_21_15,
	float P_21_16,
	float P_21_17,
	float P_21_18,
	float P_21_19,
	float P_21_20)
{
	struct log_SM_63 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_63),
		time_us : AP_HAL::micros64(),
		P_21_6 : P_21_6,
		P_21_7 : P_21_7,
		P_21_8 : P_21_8,
		P_21_9 : P_21_9,
		P_21_10 : P_21_10,
		P_21_11 : P_21_11,
		P_21_12 : P_21_12,
		P_21_13 : P_21_13,
		P_21_14 : P_21_14,
		P_21_15 : P_21_15,
		P_21_16 : P_21_16,
		P_21_17 : P_21_17,
		P_21_18 : P_21_18,
		P_21_19 : P_21_19,
		P_21_20 : P_21_20
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode42(
	float P_21_21,
	float P_21_22,
	float P_21_23,
	float P_22_0,
	float P_22_1,
	float P_22_2,
	float P_22_3,
	float P_22_4,
	float P_22_5,
	float P_22_6,
	float P_22_7,
	float P_22_8,
	float P_22_9,
	float P_22_10,
	float P_22_11)
{
	struct log_SM_64 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_64),
		time_us : AP_HAL::micros64(),
		P_21_21 : P_21_21,
		P_21_22 : P_21_22,
		P_21_23 : P_21_23,
		P_22_0 : P_22_0,
		P_22_1 : P_22_1,
		P_22_2 : P_22_2,
		P_22_3 : P_22_3,
		P_22_4 : P_22_4,
		P_22_5 : P_22_5,
		P_22_6 : P_22_6,
		P_22_7 : P_22_7,
		P_22_8 : P_22_8,
		P_22_9 : P_22_9,
		P_22_10 : P_22_10,
		P_22_11 : P_22_11
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode43(
	float P_22_12,
	float P_22_13,
	float P_22_14,
	float P_22_15,
	float P_22_16,
	float P_22_17,
	float P_22_18,
	float P_22_19,
	float P_22_20,
	float P_22_21,
	float P_22_22,
	float P_22_23,
	float P_23_0,
	float P_23_1,
	float P_23_2)
{
	struct log_SM_65 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_65),
		time_us : AP_HAL::micros64(),
		P_22_12 : P_22_12,
		P_22_13 : P_22_13,
		P_22_14 : P_22_14,
		P_22_15 : P_22_15,
		P_22_16 : P_22_16,
		P_22_17 : P_22_17,
		P_22_18 : P_22_18,
		P_22_19 : P_22_19,
		P_22_20 : P_22_20,
		P_22_21 : P_22_21,
		P_22_22 : P_22_22,
		P_22_23 : P_22_23,
		P_23_0 : P_23_0,
		P_23_1 : P_23_1,
		P_23_2 : P_23_2
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode44(
	float P_23_3,
	float P_23_4,
	float P_23_5,
	float P_23_6,
	float P_23_7,
	float P_23_8,
	float P_23_9,
	float P_23_10,
	float P_23_11,
	float P_23_12,
	float P_23_13,
	float P_23_14,
	float P_23_15,
	float P_23_16,
	float P_23_17)
{
	struct log_SM_66 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_66),
		time_us : AP_HAL::micros64(),
		P_23_3 : P_23_3,
		P_23_4 : P_23_4,
		P_23_5 : P_23_5,
		P_23_6 : P_23_6,
		P_23_7 : P_23_7,
		P_23_8 : P_23_8,
		P_23_9 : P_23_9,
		P_23_10 : P_23_10,
		P_23_11 : P_23_11,
		P_23_12 : P_23_12,
		P_23_13 : P_23_13,
		P_23_14 : P_23_14,
		P_23_15 : P_23_15,
		P_23_16 : P_23_16,
		P_23_17 : P_23_17
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_setWindMagStateLearningMode45(
	float P_23_18,
	float P_23_19,
	float P_23_20,
	float P_23_21,
	float P_23_22,
	float P_23_23)
{
	struct log_SM_67 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_SM_67),
		time_us : AP_HAL::micros64(),
		P_23_18 : P_23_18,
		P_23_19 : P_23_19,
		P_23_20 : P_23_20,
		P_23_21 : P_23_21,
		P_23_22 : P_23_22,
		P_23_23 : P_23_23
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

--------------------------------------------------------------


PARTE DO MATLAB, ALIMENTAR O WORKSPACE COM VARIAVEIS LOGADAS CONVERT_MODELO_LOGS.M

	SM29_time = 1e-6*SM29(:,2);
	P_0_0 = [SM29_time, SM29(:,3)];
	P_0_1 = [SM29_time, SM29(:,4)];
	P_0_2 = [SM29_time, SM29(:,5)];
	P_0_3 = [SM29_time, SM29(:,6)];
	P_0_4 = [SM29_time, SM29(:,7)];
	P_0_5 = [SM29_time, SM29(:,8)];
	P_0_6 = [SM29_time, SM29(:,9)];
	P_0_7 = [SM29_time, SM29(:,10)];
	P_0_8 = [SM29_time, SM29(:,11)];
	P_0_9 = [SM29_time, SM29(:,12)];
	P_0_10 = [SM29_time, SM29(:,13)];
	P_0_11 = [SM29_time, SM29(:,14)];
	P_0_12 = [SM29_time, SM29(:,15)];
	P_0_13 = [SM29_time, SM29(:,16)];
	P_0_14 = [SM29_time, SM29(:,17)];


	SM30_time = 1e-6*SM30(:,2);
	P_0_15 = [SM30_time, SM30(:,3)];
	P_0_16 = [SM30_time, SM30(:,4)];
	P_0_17 = [SM30_time, SM30(:,5)];
	P_0_18 = [SM30_time, SM30(:,6)];
	P_0_19 = [SM30_time, SM30(:,7)];
	P_0_20 = [SM30_time, SM30(:,8)];
	P_0_21 = [SM30_time, SM30(:,9)];
	P_0_22 = [SM30_time, SM30(:,10)];
	P_0_23 = [SM30_time, SM30(:,11)];
	P_1_0 = [SM30_time, SM30(:,12)];
	P_1_1 = [SM30_time, SM30(:,13)];
	P_1_2 = [SM30_time, SM30(:,14)];
	P_1_3 = [SM30_time, SM30(:,15)];
	P_1_4 = [SM30_time, SM30(:,16)];
	P_1_5 = [SM30_time, SM30(:,17)];


	SM31_time = 1e-6*SM31(:,2);
	P_1_6 = [SM31_time, SM31(:,3)];
	P_1_7 = [SM31_time, SM31(:,4)];
	P_1_8 = [SM31_time, SM31(:,5)];
	P_1_9 = [SM31_time, SM31(:,6)];
	P_1_10 = [SM31_time, SM31(:,7)];
	P_1_11 = [SM31_time, SM31(:,8)];
	P_1_12 = [SM31_time, SM31(:,9)];
	P_1_13 = [SM31_time, SM31(:,10)];
	P_1_14 = [SM31_time, SM31(:,11)];
	P_1_15 = [SM31_time, SM31(:,12)];
	P_1_16 = [SM31_time, SM31(:,13)];
	P_1_17 = [SM31_time, SM31(:,14)];
	P_1_18 = [SM31_time, SM31(:,15)];
	P_1_19 = [SM31_time, SM31(:,16)];
	P_1_20 = [SM31_time, SM31(:,17)];


	SM32_time = 1e-6*SM32(:,2);
	P_1_21 = [SM32_time, SM32(:,3)];
	P_1_22 = [SM32_time, SM32(:,4)];
	P_1_23 = [SM32_time, SM32(:,5)];
	P_2_0 = [SM32_time, SM32(:,6)];
	P_2_1 = [SM32_time, SM32(:,7)];
	P_2_2 = [SM32_time, SM32(:,8)];
	P_2_3 = [SM32_time, SM32(:,9)];
	P_2_4 = [SM32_time, SM32(:,10)];
	P_2_5 = [SM32_time, SM32(:,11)];
	P_2_6 = [SM32_time, SM32(:,12)];
	P_2_7 = [SM32_time, SM32(:,13)];
	P_2_8 = [SM32_time, SM32(:,14)];
	P_2_9 = [SM32_time, SM32(:,15)];
	P_2_10 = [SM32_time, SM32(:,16)];
	P_2_11 = [SM32_time, SM32(:,17)];


	SM33_time = 1e-6*SM33(:,2);
	P_2_12 = [SM33_time, SM33(:,3)];
	P_2_13 = [SM33_time, SM33(:,4)];
	P_2_14 = [SM33_time, SM33(:,5)];
	P_2_15 = [SM33_time, SM33(:,6)];
	P_2_16 = [SM33_time, SM33(:,7)];
	P_2_17 = [SM33_time, SM33(:,8)];
	P_2_18 = [SM33_time, SM33(:,9)];
	P_2_19 = [SM33_time, SM33(:,10)];
	P_2_20 = [SM33_time, SM33(:,11)];
	P_2_21 = [SM33_time, SM33(:,12)];
	P_2_22 = [SM33_time, SM33(:,13)];
	P_2_23 = [SM33_time, SM33(:,14)];
	P_3_0 = [SM33_time, SM33(:,15)];
	P_3_1 = [SM33_time, SM33(:,16)];
	P_3_2 = [SM33_time, SM33(:,17)];


	SM34_time = 1e-6*SM34(:,2);
	P_3_3 = [SM34_time, SM34(:,3)];
	P_3_4 = [SM34_time, SM34(:,4)];
	P_3_5 = [SM34_time, SM34(:,5)];
	P_3_6 = [SM34_time, SM34(:,6)];
	P_3_7 = [SM34_time, SM34(:,7)];
	P_3_8 = [SM34_time, SM34(:,8)];
	P_3_9 = [SM34_time, SM34(:,9)];
	P_3_10 = [SM34_time, SM34(:,10)];
	P_3_11 = [SM34_time, SM34(:,11)];
	P_3_12 = [SM34_time, SM34(:,12)];
	P_3_13 = [SM34_time, SM34(:,13)];
	P_3_14 = [SM34_time, SM34(:,14)];
	P_3_15 = [SM34_time, SM34(:,15)];
	P_3_16 = [SM34_time, SM34(:,16)];
	P_3_17 = [SM34_time, SM34(:,17)];


	SM35_time = 1e-6*SM35(:,2);
	P_3_18 = [SM35_time, SM35(:,3)];
	P_3_19 = [SM35_time, SM35(:,4)];
	P_3_20 = [SM35_time, SM35(:,5)];
	P_3_21 = [SM35_time, SM35(:,6)];
	P_3_22 = [SM35_time, SM35(:,7)];
	P_3_23 = [SM35_time, SM35(:,8)];
	P_4_0 = [SM35_time, SM35(:,9)];
	P_4_1 = [SM35_time, SM35(:,10)];
	P_4_2 = [SM35_time, SM35(:,11)];
	P_4_3 = [SM35_time, SM35(:,12)];
	P_4_4 = [SM35_time, SM35(:,13)];
	P_4_5 = [SM35_time, SM35(:,14)];
	P_4_6 = [SM35_time, SM35(:,15)];
	P_4_7 = [SM35_time, SM35(:,16)];
	P_4_8 = [SM35_time, SM35(:,17)];


	SM36_time = 1e-6*SM36(:,2);
	P_4_9 = [SM36_time, SM36(:,3)];
	P_4_10 = [SM36_time, SM36(:,4)];
	P_4_11 = [SM36_time, SM36(:,5)];
	P_4_12 = [SM36_time, SM36(:,6)];
	P_4_13 = [SM36_time, SM36(:,7)];
	P_4_14 = [SM36_time, SM36(:,8)];
	P_4_15 = [SM36_time, SM36(:,9)];
	P_4_16 = [SM36_time, SM36(:,10)];
	P_4_17 = [SM36_time, SM36(:,11)];
	P_4_18 = [SM36_time, SM36(:,12)];
	P_4_19 = [SM36_time, SM36(:,13)];
	P_4_20 = [SM36_time, SM36(:,14)];
	P_4_21 = [SM36_time, SM36(:,15)];
	P_4_22 = [SM36_time, SM36(:,16)];
	P_4_23 = [SM36_time, SM36(:,17)];


	SM37_time = 1e-6*SM37(:,2);
	P_5_0 = [SM37_time, SM37(:,3)];
	P_5_1 = [SM37_time, SM37(:,4)];
	P_5_2 = [SM37_time, SM37(:,5)];
	P_5_3 = [SM37_time, SM37(:,6)];
	P_5_4 = [SM37_time, SM37(:,7)];
	P_5_5 = [SM37_time, SM37(:,8)];
	P_5_6 = [SM37_time, SM37(:,9)];
	P_5_7 = [SM37_time, SM37(:,10)];
	P_5_8 = [SM37_time, SM37(:,11)];
	P_5_9 = [SM37_time, SM37(:,12)];
	P_5_10 = [SM37_time, SM37(:,13)];
	P_5_11 = [SM37_time, SM37(:,14)];
	P_5_12 = [SM37_time, SM37(:,15)];
	P_5_13 = [SM37_time, SM37(:,16)];
	P_5_14 = [SM37_time, SM37(:,17)];


	SM38_time = 1e-6*SM38(:,2);
	P_5_15 = [SM38_time, SM38(:,3)];
	P_5_16 = [SM38_time, SM38(:,4)];
	P_5_17 = [SM38_time, SM38(:,5)];
	P_5_18 = [SM38_time, SM38(:,6)];
	P_5_19 = [SM38_time, SM38(:,7)];
	P_5_20 = [SM38_time, SM38(:,8)];
	P_5_21 = [SM38_time, SM38(:,9)];
	P_5_22 = [SM38_time, SM38(:,10)];
	P_5_23 = [SM38_time, SM38(:,11)];
	P_6_0 = [SM38_time, SM38(:,12)];
	P_6_1 = [SM38_time, SM38(:,13)];
	P_6_2 = [SM38_time, SM38(:,14)];
	P_6_3 = [SM38_time, SM38(:,15)];
	P_6_4 = [SM38_time, SM38(:,16)];
	P_6_5 = [SM38_time, SM38(:,17)];


	SM39_time = 1e-6*SM39(:,2);
	P_6_6 = [SM39_time, SM39(:,3)];
	P_6_7 = [SM39_time, SM39(:,4)];
	P_6_8 = [SM39_time, SM39(:,5)];
	P_6_9 = [SM39_time, SM39(:,6)];
	P_6_10 = [SM39_time, SM39(:,7)];
	P_6_11 = [SM39_time, SM39(:,8)];
	P_6_12 = [SM39_time, SM39(:,9)];
	P_6_13 = [SM39_time, SM39(:,10)];
	P_6_14 = [SM39_time, SM39(:,11)];
	P_6_15 = [SM39_time, SM39(:,12)];
	P_6_16 = [SM39_time, SM39(:,13)];
	P_6_17 = [SM39_time, SM39(:,14)];
	P_6_18 = [SM39_time, SM39(:,15)];
	P_6_19 = [SM39_time, SM39(:,16)];
	P_6_20 = [SM39_time, SM39(:,17)];


	SM40_time = 1e-6*SM40(:,2);
	P_6_21 = [SM40_time, SM40(:,3)];
	P_6_22 = [SM40_time, SM40(:,4)];
	P_6_23 = [SM40_time, SM40(:,5)];
	P_7_0 = [SM40_time, SM40(:,6)];
	P_7_1 = [SM40_time, SM40(:,7)];
	P_7_2 = [SM40_time, SM40(:,8)];
	P_7_3 = [SM40_time, SM40(:,9)];
	P_7_4 = [SM40_time, SM40(:,10)];
	P_7_5 = [SM40_time, SM40(:,11)];
	P_7_6 = [SM40_time, SM40(:,12)];
	P_7_7 = [SM40_time, SM40(:,13)];
	P_7_8 = [SM40_time, SM40(:,14)];
	P_7_9 = [SM40_time, SM40(:,15)];
	P_7_10 = [SM40_time, SM40(:,16)];
	P_7_11 = [SM40_time, SM40(:,17)];


	SM41_time = 1e-6*SM41(:,2);
	P_7_12 = [SM41_time, SM41(:,3)];
	P_7_13 = [SM41_time, SM41(:,4)];
	P_7_14 = [SM41_time, SM41(:,5)];
	P_7_15 = [SM41_time, SM41(:,6)];
	P_7_16 = [SM41_time, SM41(:,7)];
	P_7_17 = [SM41_time, SM41(:,8)];
	P_7_18 = [SM41_time, SM41(:,9)];
	P_7_19 = [SM41_time, SM41(:,10)];
	P_7_20 = [SM41_time, SM41(:,11)];
	P_7_21 = [SM41_time, SM41(:,12)];
	P_7_22 = [SM41_time, SM41(:,13)];
	P_7_23 = [SM41_time, SM41(:,14)];
	P_8_0 = [SM41_time, SM41(:,15)];
	P_8_1 = [SM41_time, SM41(:,16)];
	P_8_2 = [SM41_time, SM41(:,17)];


	SM42_time = 1e-6*SM42(:,2);
	P_8_3 = [SM42_time, SM42(:,3)];
	P_8_4 = [SM42_time, SM42(:,4)];
	P_8_5 = [SM42_time, SM42(:,5)];
	P_8_6 = [SM42_time, SM42(:,6)];
	P_8_7 = [SM42_time, SM42(:,7)];
	P_8_8 = [SM42_time, SM42(:,8)];
	P_8_9 = [SM42_time, SM42(:,9)];
	P_8_10 = [SM42_time, SM42(:,10)];
	P_8_11 = [SM42_time, SM42(:,11)];
	P_8_12 = [SM42_time, SM42(:,12)];
	P_8_13 = [SM42_time, SM42(:,13)];
	P_8_14 = [SM42_time, SM42(:,14)];
	P_8_15 = [SM42_time, SM42(:,15)];
	P_8_16 = [SM42_time, SM42(:,16)];
	P_8_17 = [SM42_time, SM42(:,17)];


	SM43_time = 1e-6*SM43(:,2);
	P_8_18 = [SM43_time, SM43(:,3)];
	P_8_19 = [SM43_time, SM43(:,4)];
	P_8_20 = [SM43_time, SM43(:,5)];
	P_8_21 = [SM43_time, SM43(:,6)];
	P_8_22 = [SM43_time, SM43(:,7)];
	P_8_23 = [SM43_time, SM43(:,8)];
	P_9_0 = [SM43_time, SM43(:,9)];
	P_9_1 = [SM43_time, SM43(:,10)];
	P_9_2 = [SM43_time, SM43(:,11)];
	P_9_3 = [SM43_time, SM43(:,12)];
	P_9_4 = [SM43_time, SM43(:,13)];
	P_9_5 = [SM43_time, SM43(:,14)];
	P_9_6 = [SM43_time, SM43(:,15)];
	P_9_7 = [SM43_time, SM43(:,16)];
	P_9_8 = [SM43_time, SM43(:,17)];


	SM44_time = 1e-6*SM44(:,2);
	P_9_9 = [SM44_time, SM44(:,3)];
	P_9_10 = [SM44_time, SM44(:,4)];
	P_9_11 = [SM44_time, SM44(:,5)];
	P_9_12 = [SM44_time, SM44(:,6)];
	P_9_13 = [SM44_time, SM44(:,7)];
	P_9_14 = [SM44_time, SM44(:,8)];
	P_9_15 = [SM44_time, SM44(:,9)];
	P_9_16 = [SM44_time, SM44(:,10)];
	P_9_17 = [SM44_time, SM44(:,11)];
	P_9_18 = [SM44_time, SM44(:,12)];
	P_9_19 = [SM44_time, SM44(:,13)];
	P_9_20 = [SM44_time, SM44(:,14)];
	P_9_21 = [SM44_time, SM44(:,15)];
	P_9_22 = [SM44_time, SM44(:,16)];
	P_9_23 = [SM44_time, SM44(:,17)];


	SM45_time = 1e-6*SM45(:,2);
	P_10_0 = [SM45_time, SM45(:,3)];
	P_10_1 = [SM45_time, SM45(:,4)];
	P_10_2 = [SM45_time, SM45(:,5)];
	P_10_3 = [SM45_time, SM45(:,6)];
	P_10_4 = [SM45_time, SM45(:,7)];
	P_10_5 = [SM45_time, SM45(:,8)];
	P_10_6 = [SM45_time, SM45(:,9)];
	P_10_7 = [SM45_time, SM45(:,10)];
	P_10_8 = [SM45_time, SM45(:,11)];
	P_10_9 = [SM45_time, SM45(:,12)];
	P_10_10 = [SM45_time, SM45(:,13)];
	P_10_11 = [SM45_time, SM45(:,14)];
	P_10_12 = [SM45_time, SM45(:,15)];
	P_10_13 = [SM45_time, SM45(:,16)];
	P_10_14 = [SM45_time, SM45(:,17)];


	SM46_time = 1e-6*SM46(:,2);
	P_10_15 = [SM46_time, SM46(:,3)];
	P_10_16 = [SM46_time, SM46(:,4)];
	P_10_17 = [SM46_time, SM46(:,5)];
	P_10_18 = [SM46_time, SM46(:,6)];
	P_10_19 = [SM46_time, SM46(:,7)];
	P_10_20 = [SM46_time, SM46(:,8)];
	P_10_21 = [SM46_time, SM46(:,9)];
	P_10_22 = [SM46_time, SM46(:,10)];
	P_10_23 = [SM46_time, SM46(:,11)];
	P_11_0 = [SM46_time, SM46(:,12)];
	P_11_1 = [SM46_time, SM46(:,13)];
	P_11_2 = [SM46_time, SM46(:,14)];
	P_11_3 = [SM46_time, SM46(:,15)];
	P_11_4 = [SM46_time, SM46(:,16)];
	P_11_5 = [SM46_time, SM46(:,17)];


	SM47_time = 1e-6*SM47(:,2);
	P_11_6 = [SM47_time, SM47(:,3)];
	P_11_7 = [SM47_time, SM47(:,4)];
	P_11_8 = [SM47_time, SM47(:,5)];
	P_11_9 = [SM47_time, SM47(:,6)];
	P_11_10 = [SM47_time, SM47(:,7)];
	P_11_11 = [SM47_time, SM47(:,8)];
	P_11_12 = [SM47_time, SM47(:,9)];
	P_11_13 = [SM47_time, SM47(:,10)];
	P_11_14 = [SM47_time, SM47(:,11)];
	P_11_15 = [SM47_time, SM47(:,12)];
	P_11_16 = [SM47_time, SM47(:,13)];
	P_11_17 = [SM47_time, SM47(:,14)];
	P_11_18 = [SM47_time, SM47(:,15)];
	P_11_19 = [SM47_time, SM47(:,16)];
	P_11_20 = [SM47_time, SM47(:,17)];


	SM48_time = 1e-6*SM48(:,2);
	P_11_21 = [SM48_time, SM48(:,3)];
	P_11_22 = [SM48_time, SM48(:,4)];
	P_11_23 = [SM48_time, SM48(:,5)];
	P_12_0 = [SM48_time, SM48(:,6)];
	P_12_1 = [SM48_time, SM48(:,7)];
	P_12_2 = [SM48_time, SM48(:,8)];
	P_12_3 = [SM48_time, SM48(:,9)];
	P_12_4 = [SM48_time, SM48(:,10)];
	P_12_5 = [SM48_time, SM48(:,11)];
	P_12_6 = [SM48_time, SM48(:,12)];
	P_12_7 = [SM48_time, SM48(:,13)];
	P_12_8 = [SM48_time, SM48(:,14)];
	P_12_9 = [SM48_time, SM48(:,15)];
	P_12_10 = [SM48_time, SM48(:,16)];
	P_12_11 = [SM48_time, SM48(:,17)];


	SM49_time = 1e-6*SM49(:,2);
	P_12_12 = [SM49_time, SM49(:,3)];
	P_12_13 = [SM49_time, SM49(:,4)];
	P_12_14 = [SM49_time, SM49(:,5)];
	P_12_15 = [SM49_time, SM49(:,6)];
	P_12_16 = [SM49_time, SM49(:,7)];
	P_12_17 = [SM49_time, SM49(:,8)];
	P_12_18 = [SM49_time, SM49(:,9)];
	P_12_19 = [SM49_time, SM49(:,10)];
	P_12_20 = [SM49_time, SM49(:,11)];
	P_12_21 = [SM49_time, SM49(:,12)];
	P_12_22 = [SM49_time, SM49(:,13)];
	P_12_23 = [SM49_time, SM49(:,14)];
	P_13_0 = [SM49_time, SM49(:,15)];
	P_13_1 = [SM49_time, SM49(:,16)];
	P_13_2 = [SM49_time, SM49(:,17)];


	SM50_time = 1e-6*SM50(:,2);
	P_13_3 = [SM50_time, SM50(:,3)];
	P_13_4 = [SM50_time, SM50(:,4)];
	P_13_5 = [SM50_time, SM50(:,5)];
	P_13_6 = [SM50_time, SM50(:,6)];
	P_13_7 = [SM50_time, SM50(:,7)];
	P_13_8 = [SM50_time, SM50(:,8)];
	P_13_9 = [SM50_time, SM50(:,9)];
	P_13_10 = [SM50_time, SM50(:,10)];
	P_13_11 = [SM50_time, SM50(:,11)];
	P_13_12 = [SM50_time, SM50(:,12)];
	P_13_13 = [SM50_time, SM50(:,13)];
	P_13_14 = [SM50_time, SM50(:,14)];
	P_13_15 = [SM50_time, SM50(:,15)];
	P_13_16 = [SM50_time, SM50(:,16)];
	P_13_17 = [SM50_time, SM50(:,17)];


	SM51_time = 1e-6*SM51(:,2);
	P_13_18 = [SM51_time, SM51(:,3)];
	P_13_19 = [SM51_time, SM51(:,4)];
	P_13_20 = [SM51_time, SM51(:,5)];
	P_13_21 = [SM51_time, SM51(:,6)];
	P_13_22 = [SM51_time, SM51(:,7)];
	P_13_23 = [SM51_time, SM51(:,8)];
	P_14_0 = [SM51_time, SM51(:,9)];
	P_14_1 = [SM51_time, SM51(:,10)];
	P_14_2 = [SM51_time, SM51(:,11)];
	P_14_3 = [SM51_time, SM51(:,12)];
	P_14_4 = [SM51_time, SM51(:,13)];
	P_14_5 = [SM51_time, SM51(:,14)];
	P_14_6 = [SM51_time, SM51(:,15)];
	P_14_7 = [SM51_time, SM51(:,16)];
	P_14_8 = [SM51_time, SM51(:,17)];


	SM52_time = 1e-6*SM52(:,2);
	P_14_9 = [SM52_time, SM52(:,3)];
	P_14_10 = [SM52_time, SM52(:,4)];
	P_14_11 = [SM52_time, SM52(:,5)];
	P_14_12 = [SM52_time, SM52(:,6)];
	P_14_13 = [SM52_time, SM52(:,7)];
	P_14_14 = [SM52_time, SM52(:,8)];
	P_14_15 = [SM52_time, SM52(:,9)];
	P_14_16 = [SM52_time, SM52(:,10)];
	P_14_17 = [SM52_time, SM52(:,11)];
	P_14_18 = [SM52_time, SM52(:,12)];
	P_14_19 = [SM52_time, SM52(:,13)];
	P_14_20 = [SM52_time, SM52(:,14)];
	P_14_21 = [SM52_time, SM52(:,15)];
	P_14_22 = [SM52_time, SM52(:,16)];
	P_14_23 = [SM52_time, SM52(:,17)];


	SM53_time = 1e-6*SM53(:,2);
	P_15_0 = [SM53_time, SM53(:,3)];
	P_15_1 = [SM53_time, SM53(:,4)];
	P_15_2 = [SM53_time, SM53(:,5)];
	P_15_3 = [SM53_time, SM53(:,6)];
	P_15_4 = [SM53_time, SM53(:,7)];
	P_15_5 = [SM53_time, SM53(:,8)];
	P_15_6 = [SM53_time, SM53(:,9)];
	P_15_7 = [SM53_time, SM53(:,10)];
	P_15_8 = [SM53_time, SM53(:,11)];
	P_15_9 = [SM53_time, SM53(:,12)];
	P_15_10 = [SM53_time, SM53(:,13)];
	P_15_11 = [SM53_time, SM53(:,14)];
	P_15_12 = [SM53_time, SM53(:,15)];
	P_15_13 = [SM53_time, SM53(:,16)];
	P_15_14 = [SM53_time, SM53(:,17)];


	SM54_time = 1e-6*SM54(:,2);
	P_15_15 = [SM54_time, SM54(:,3)];
	P_15_16 = [SM54_time, SM54(:,4)];
	P_15_17 = [SM54_time, SM54(:,5)];
	P_15_18 = [SM54_time, SM54(:,6)];
	P_15_19 = [SM54_time, SM54(:,7)];
	P_15_20 = [SM54_time, SM54(:,8)];
	P_15_21 = [SM54_time, SM54(:,9)];
	P_15_22 = [SM54_time, SM54(:,10)];
	P_15_23 = [SM54_time, SM54(:,11)];
	P_16_0 = [SM54_time, SM54(:,12)];
	P_16_1 = [SM54_time, SM54(:,13)];
	P_16_2 = [SM54_time, SM54(:,14)];
	P_16_3 = [SM54_time, SM54(:,15)];
	P_16_4 = [SM54_time, SM54(:,16)];
	P_16_5 = [SM54_time, SM54(:,17)];


	SM55_time = 1e-6*SM55(:,2);
	P_16_6 = [SM55_time, SM55(:,3)];
	P_16_7 = [SM55_time, SM55(:,4)];
	P_16_8 = [SM55_time, SM55(:,5)];
	P_16_9 = [SM55_time, SM55(:,6)];
	P_16_10 = [SM55_time, SM55(:,7)];
	P_16_11 = [SM55_time, SM55(:,8)];
	P_16_12 = [SM55_time, SM55(:,9)];
	P_16_13 = [SM55_time, SM55(:,10)];
	P_16_14 = [SM55_time, SM55(:,11)];
	P_16_15 = [SM55_time, SM55(:,12)];
	P_16_16 = [SM55_time, SM55(:,13)];
	P_16_17 = [SM55_time, SM55(:,14)];
	P_16_18 = [SM55_time, SM55(:,15)];
	P_16_19 = [SM55_time, SM55(:,16)];
	P_16_20 = [SM55_time, SM55(:,17)];


	SM56_time = 1e-6*SM56(:,2);
	P_16_21 = [SM56_time, SM56(:,3)];
	P_16_22 = [SM56_time, SM56(:,4)];
	P_16_23 = [SM56_time, SM56(:,5)];
	P_17_0 = [SM56_time, SM56(:,6)];
	P_17_1 = [SM56_time, SM56(:,7)];
	P_17_2 = [SM56_time, SM56(:,8)];
	P_17_3 = [SM56_time, SM56(:,9)];
	P_17_4 = [SM56_time, SM56(:,10)];
	P_17_5 = [SM56_time, SM56(:,11)];
	P_17_6 = [SM56_time, SM56(:,12)];
	P_17_7 = [SM56_time, SM56(:,13)];
	P_17_8 = [SM56_time, SM56(:,14)];
	P_17_9 = [SM56_time, SM56(:,15)];
	P_17_10 = [SM56_time, SM56(:,16)];
	P_17_11 = [SM56_time, SM56(:,17)];


	SM57_time = 1e-6*SM57(:,2);
	P_17_12 = [SM57_time, SM57(:,3)];
	P_17_13 = [SM57_time, SM57(:,4)];
	P_17_14 = [SM57_time, SM57(:,5)];
	P_17_15 = [SM57_time, SM57(:,6)];
	P_17_16 = [SM57_time, SM57(:,7)];
	P_17_17 = [SM57_time, SM57(:,8)];
	P_17_18 = [SM57_time, SM57(:,9)];
	P_17_19 = [SM57_time, SM57(:,10)];
	P_17_20 = [SM57_time, SM57(:,11)];
	P_17_21 = [SM57_time, SM57(:,12)];
	P_17_22 = [SM57_time, SM57(:,13)];
	P_17_23 = [SM57_time, SM57(:,14)];
	P_18_0 = [SM57_time, SM57(:,15)];
	P_18_1 = [SM57_time, SM57(:,16)];
	P_18_2 = [SM57_time, SM57(:,17)];


	SM58_time = 1e-6*SM58(:,2);
	P_18_3 = [SM58_time, SM58(:,3)];
	P_18_4 = [SM58_time, SM58(:,4)];
	P_18_5 = [SM58_time, SM58(:,5)];
	P_18_6 = [SM58_time, SM58(:,6)];
	P_18_7 = [SM58_time, SM58(:,7)];
	P_18_8 = [SM58_time, SM58(:,8)];
	P_18_9 = [SM58_time, SM58(:,9)];
	P_18_10 = [SM58_time, SM58(:,10)];
	P_18_11 = [SM58_time, SM58(:,11)];
	P_18_12 = [SM58_time, SM58(:,12)];
	P_18_13 = [SM58_time, SM58(:,13)];
	P_18_14 = [SM58_time, SM58(:,14)];
	P_18_15 = [SM58_time, SM58(:,15)];
	P_18_16 = [SM58_time, SM58(:,16)];
	P_18_17 = [SM58_time, SM58(:,17)];


	SM59_time = 1e-6*SM59(:,2);
	P_18_18 = [SM59_time, SM59(:,3)];
	P_18_19 = [SM59_time, SM59(:,4)];
	P_18_20 = [SM59_time, SM59(:,5)];
	P_18_21 = [SM59_time, SM59(:,6)];
	P_18_22 = [SM59_time, SM59(:,7)];
	P_18_23 = [SM59_time, SM59(:,8)];
	P_19_0 = [SM59_time, SM59(:,9)];
	P_19_1 = [SM59_time, SM59(:,10)];
	P_19_2 = [SM59_time, SM59(:,11)];
	P_19_3 = [SM59_time, SM59(:,12)];
	P_19_4 = [SM59_time, SM59(:,13)];
	P_19_5 = [SM59_time, SM59(:,14)];
	P_19_6 = [SM59_time, SM59(:,15)];
	P_19_7 = [SM59_time, SM59(:,16)];
	P_19_8 = [SM59_time, SM59(:,17)];


	SM60_time = 1e-6*SM60(:,2);
	P_19_9 = [SM60_time, SM60(:,3)];
	P_19_10 = [SM60_time, SM60(:,4)];
	P_19_11 = [SM60_time, SM60(:,5)];
	P_19_12 = [SM60_time, SM60(:,6)];
	P_19_13 = [SM60_time, SM60(:,7)];
	P_19_14 = [SM60_time, SM60(:,8)];
	P_19_15 = [SM60_time, SM60(:,9)];
	P_19_16 = [SM60_time, SM60(:,10)];
	P_19_17 = [SM60_time, SM60(:,11)];
	P_19_18 = [SM60_time, SM60(:,12)];
	P_19_19 = [SM60_time, SM60(:,13)];
	P_19_20 = [SM60_time, SM60(:,14)];
	P_19_21 = [SM60_time, SM60(:,15)];
	P_19_22 = [SM60_time, SM60(:,16)];
	P_19_23 = [SM60_time, SM60(:,17)];


	SM61_time = 1e-6*SM61(:,2);
	P_20_0 = [SM61_time, SM61(:,3)];
	P_20_1 = [SM61_time, SM61(:,4)];
	P_20_2 = [SM61_time, SM61(:,5)];
	P_20_3 = [SM61_time, SM61(:,6)];
	P_20_4 = [SM61_time, SM61(:,7)];
	P_20_5 = [SM61_time, SM61(:,8)];
	P_20_6 = [SM61_time, SM61(:,9)];
	P_20_7 = [SM61_time, SM61(:,10)];
	P_20_8 = [SM61_time, SM61(:,11)];
	P_20_9 = [SM61_time, SM61(:,12)];
	P_20_10 = [SM61_time, SM61(:,13)];
	P_20_11 = [SM61_time, SM61(:,14)];
	P_20_12 = [SM61_time, SM61(:,15)];
	P_20_13 = [SM61_time, SM61(:,16)];
	P_20_14 = [SM61_time, SM61(:,17)];


	SM62_time = 1e-6*SM62(:,2);
	P_20_15 = [SM62_time, SM62(:,3)];
	P_20_16 = [SM62_time, SM62(:,4)];
	P_20_17 = [SM62_time, SM62(:,5)];
	P_20_18 = [SM62_time, SM62(:,6)];
	P_20_19 = [SM62_time, SM62(:,7)];
	P_20_20 = [SM62_time, SM62(:,8)];
	P_20_21 = [SM62_time, SM62(:,9)];
	P_20_22 = [SM62_time, SM62(:,10)];
	P_20_23 = [SM62_time, SM62(:,11)];
	P_21_0 = [SM62_time, SM62(:,12)];
	P_21_1 = [SM62_time, SM62(:,13)];
	P_21_2 = [SM62_time, SM62(:,14)];
	P_21_3 = [SM62_time, SM62(:,15)];
	P_21_4 = [SM62_time, SM62(:,16)];
	P_21_5 = [SM62_time, SM62(:,17)];


	SM63_time = 1e-6*SM63(:,2);
	P_21_6 = [SM63_time, SM63(:,3)];
	P_21_7 = [SM63_time, SM63(:,4)];
	P_21_8 = [SM63_time, SM63(:,5)];
	P_21_9 = [SM63_time, SM63(:,6)];
	P_21_10 = [SM63_time, SM63(:,7)];
	P_21_11 = [SM63_time, SM63(:,8)];
	P_21_12 = [SM63_time, SM63(:,9)];
	P_21_13 = [SM63_time, SM63(:,10)];
	P_21_14 = [SM63_time, SM63(:,11)];
	P_21_15 = [SM63_time, SM63(:,12)];
	P_21_16 = [SM63_time, SM63(:,13)];
	P_21_17 = [SM63_time, SM63(:,14)];
	P_21_18 = [SM63_time, SM63(:,15)];
	P_21_19 = [SM63_time, SM63(:,16)];
	P_21_20 = [SM63_time, SM63(:,17)];


	SM64_time = 1e-6*SM64(:,2);
	P_21_21 = [SM64_time, SM64(:,3)];
	P_21_22 = [SM64_time, SM64(:,4)];
	P_21_23 = [SM64_time, SM64(:,5)];
	P_22_0 = [SM64_time, SM64(:,6)];
	P_22_1 = [SM64_time, SM64(:,7)];
	P_22_2 = [SM64_time, SM64(:,8)];
	P_22_3 = [SM64_time, SM64(:,9)];
	P_22_4 = [SM64_time, SM64(:,10)];
	P_22_5 = [SM64_time, SM64(:,11)];
	P_22_6 = [SM64_time, SM64(:,12)];
	P_22_7 = [SM64_time, SM64(:,13)];
	P_22_8 = [SM64_time, SM64(:,14)];
	P_22_9 = [SM64_time, SM64(:,15)];
	P_22_10 = [SM64_time, SM64(:,16)];
	P_22_11 = [SM64_time, SM64(:,17)];


	SM65_time = 1e-6*SM65(:,2);
	P_22_12 = [SM65_time, SM65(:,3)];
	P_22_13 = [SM65_time, SM65(:,4)];
	P_22_14 = [SM65_time, SM65(:,5)];
	P_22_15 = [SM65_time, SM65(:,6)];
	P_22_16 = [SM65_time, SM65(:,7)];
	P_22_17 = [SM65_time, SM65(:,8)];
	P_22_18 = [SM65_time, SM65(:,9)];
	P_22_19 = [SM65_time, SM65(:,10)];
	P_22_20 = [SM65_time, SM65(:,11)];
	P_22_21 = [SM65_time, SM65(:,12)];
	P_22_22 = [SM65_time, SM65(:,13)];
	P_22_23 = [SM65_time, SM65(:,14)];
	P_23_0 = [SM65_time, SM65(:,15)];
	P_23_1 = [SM65_time, SM65(:,16)];
	P_23_2 = [SM65_time, SM65(:,17)];


	SM66_time = 1e-6*SM66(:,2);
	P_23_3 = [SM66_time, SM66(:,3)];
	P_23_4 = [SM66_time, SM66(:,4)];
	P_23_5 = [SM66_time, SM66(:,5)];
	P_23_6 = [SM66_time, SM66(:,6)];
	P_23_7 = [SM66_time, SM66(:,7)];
	P_23_8 = [SM66_time, SM66(:,8)];
	P_23_9 = [SM66_time, SM66(:,9)];
	P_23_10 = [SM66_time, SM66(:,10)];
	P_23_11 = [SM66_time, SM66(:,11)];
	P_23_12 = [SM66_time, SM66(:,12)];
	P_23_13 = [SM66_time, SM66(:,13)];
	P_23_14 = [SM66_time, SM66(:,14)];
	P_23_15 = [SM66_time, SM66(:,15)];
	P_23_16 = [SM66_time, SM66(:,16)];
	P_23_17 = [SM66_time, SM66(:,17)];


	SM67_time = 1e-6*SM67(:,2);
	P_23_18 = [SM67_time, SM67(:,3)];
	P_23_19 = [SM67_time, SM67(:,4)];
	P_23_20 = [SM67_time, SM67(:,5)];
	P_23_21 = [SM67_time, SM67(:,6)];
	P_23_22 = [SM67_time, SM67(:,7)];
	P_23_23 = [SM67_time, SM67(:,8)];


