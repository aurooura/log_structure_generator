===============ARQUIVO.CPP ====================

#define ACTIVE_LOG_EKF_20 1


#define AUX_LOG_EKF_20 AP::logger().Write_SelectVelPosFusion1(\
	log_gpsDataDelayed_sensor_idx, \
	log_accelPosOffset, \
	log__fusionModeGPS, \
	log_gpsDataToFuse, \
	log_extNavDataToFuse, \
	log_gpsDataDelayed_vel_x, \
	log_gpsDataDelayed_vel_y, \
	log_gpsDataDelayed_vel_z, \
	log_gpsDataDelayed_pos_x, \
	log_gpsDataDelayed_pos_y, \
	log_gpsDataDelayed_hgt, \
	log_imuDataDelayed_delAng, \
	log_imuDataDelayed_delAngDT)


=============== XMOBOTS_LOGS.H ====================

#define LOG_EKF_20_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_EKF_20), "EKFK",\
	"QfffBBffffffff","t,1,2,3,4,5,6,7,8,9,10,11,12,13","s-------------","F0000000000000"}

struct PACKED log_EKF_20 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float gpsDataDelayed_sensor_idx;
	float accelPosOffset;
	float _fusionModeGPS;
	uint8_t gpsDataToFuse;
	uint8_t extNavDataToFuse;
	float gpsDataDelayed_vel_x;
	float gpsDataDelayed_vel_y;
	float gpsDataDelayed_vel_z;
	float gpsDataDelayed_pos_x;
	float gpsDataDelayed_pos_y;
	float gpsDataDelayed_hgt;
	float imuDataDelayed_delAng;
	float imuDataDelayed_delAngDT;
};

=============== AP_LOGGER_H====================

void Write_SelectVelPosFusion1(float gpsDataDelayed_sensor_idx,float accelPosOffset,float _fusionModeGPS,uint8_t gpsDataToFuse,uint8_t extNavDataToFuse,float gpsDataDelayed_vel_x,float gpsDataDelayed_vel_y,float gpsDataDelayed_vel_z,float gpsDataDelayed_pos_x,float gpsDataDelayed_pos_y,float gpsDataDelayed_hgt,float imuDataDelayed_delAng,float imuDataDelayed_delAngDT);


===============LOG_STRUCTURE.H=======================
NAO ESQUECER O SHOULD_LOG_EKF!!!!!

LOG_EKF_20_BASE(LOG_EKF_20),
===============LOG_FILE_H====================

void AP_Logger::Write_SelectVelPosFusion1(float gpsDataDelayed_sensor_idx,float accelPosOffset,float _fusionModeGPS,uint8_t gpsDataToFuse,uint8_t extNavDataToFuse,float gpsDataDelayed_vel_x,float gpsDataDelayed_vel_y,float gpsDataDelayed_vel_z,float gpsDataDelayed_pos_x,float gpsDataDelayed_pos_y,float gpsDataDelayed_hgt,float imuDataDelayed_delAng,float imuDataDelayed_delAngDT){
	struct log_EKF_20 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_EKF_20),
		time_us : AP_HAL::micros64(),
		gpsDataDelayed_sensor_idx : gpsDataDelayed_sensor_idx,
		accelPosOffset : accelPosOffset,
		_fusionModeGPS : _fusionModeGPS,
		gpsDataToFuse : gpsDataToFuse,
		extNavDataToFuse : extNavDataToFuse,
		gpsDataDelayed_vel_x : gpsDataDelayed_vel_x,
		gpsDataDelayed_vel_y : gpsDataDelayed_vel_y,
		gpsDataDelayed_vel_z : gpsDataDelayed_vel_z,
		gpsDataDelayed_pos_x : gpsDataDelayed_pos_x,
		gpsDataDelayed_pos_y : gpsDataDelayed_pos_y,
		gpsDataDelayed_hgt : gpsDataDelayed_hgt,
		imuDataDelayed_delAng : imuDataDelayed_delAng,
		imuDataDelayed_delAngDT : imuDataDelayed_delAngDT
	};
	WriteBlock(&pkt, sizeof(pkt));
}

