===============ARQUIVO.CPP ====================

#define ACTIVE_LOG_C800 1
#define AUX_LOG_C800 AP::logger().Write_controlMagYawReset800(\
	log_outputDataNew_quat_q1_out, \
	log_outputDataNew_quat_q2_out, \
	log_outputDataNew_quat_q3_out, \
	log_outputDataNew_quat_q4_out, \
	log_outputDataDelayed_quat_q1_out, \
	log_outputDataDelayed_quat_q2_out, \
	log_outputDataDelayed_quat_q3_out, \
	log_outputDataDelayed_quat_q4_out, \
	log_magYawResetRequest_out, \
	log_yawAlignComplete_out, \
	log_finalInflightYawInit_out, \
	log_finalInflightMagInit_out)


#define ACTIVE_LOG_C801 1
#define AUX_LOG_C801 AP::logger().Write_controlMagYawReset801(\
	log_gpsYawResetRequest, \
	log_lastYawReset_ms_out, \
	log_yawResetAngle_out, \
	log_faultStatus_bad_decl, \
	log_faultStatus_bad_decl_out, \
	log_magStateResetRequest_out)


ATRIBUICAO PARA OS #if E #endif

	float log_outputDataNew_quat_q1_out = outputDataNew.quat.q1.out;
	float log_outputDataNew_quat_q2_out = outputDataNew.quat.q2.out;
	float log_outputDataNew_quat_q3_out = outputDataNew.quat.q3.out;
	float log_outputDataNew_quat_q4_out = outputDataNew.quat.q4.out;
	float log_outputDataDelayed_quat_q1_out = outputDataDelayed.quat.q1.out;
	float log_outputDataDelayed_quat_q2_out = outputDataDelayed.quat.q2.out;
	float log_outputDataDelayed_quat_q3_out = outputDataDelayed.quat.q3.out;
	float log_outputDataDelayed_quat_q4_out = outputDataDelayed.quat.q4.out;
	uint8_t log_magYawResetRequest_out = magYawResetRequest_out;
	uint8_t log_yawAlignComplete_out = yawAlignComplete_out;
	uint8_t log_finalInflightYawInit_out = finalInflightYawInit_out;
	uint8_t log_finalInflightMagInit_out = finalInflightMagInit_out;
	AUX_LOG_C800;

	uint8_t log_gpsYawResetRequest = gpsYawResetRequest;
	int32_t log_lastYawReset_ms_out = lastYawReset_ms_out;
	float log_yawResetAngle_out = yawResetAngle_out;
	uint8_t log_faultStatus_bad_decl = faultStatus.bad_decl;
	uint8_t log_faultStatus_bad_decl_out = faultStatus.bad_decl.out;
	uint8_t log_magStateResetRequest_out = magStateResetRequest.out;
	AUX_LOG_C801;



=============== XMOBOTS_LOGS.H ====================

#define LOG_C800_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_C800), "C800",\
	"QffffffffBBBB","t,1,2,3,4,5,6,7,8,9,10,11,12","s------------","F000000000000"}

struct PACKED log_C800 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	float outputDataNew_quat_q1_out;
	float outputDataNew_quat_q2_out;
	float outputDataNew_quat_q3_out;
	float outputDataNew_quat_q4_out;
	float outputDataDelayed_quat_q1_out;
	float outputDataDelayed_quat_q2_out;
	float outputDataDelayed_quat_q3_out;
	float outputDataDelayed_quat_q4_out;
	uint8_t magYawResetRequest_out;
	uint8_t yawAlignComplete_out;
	uint8_t finalInflightYawInit_out;
	uint8_t finalInflightMagInit_out;
};

#define LOG_C801_BASE(struct_enum)\
	{ (struct_enum), sizeof(log_C801), "C801",\
	"QBifBBB","t,1,2,3,4,5,6","s------","F000000"}

struct PACKED log_C801 {
	LOG_PACKET_HEADER;
	uint64_t time_us;
	uint8_t gpsYawResetRequest;
	int32_t lastYawReset_ms_out;
	float yawResetAngle_out;
	uint8_t faultStatus_bad_decl;
	uint8_t faultStatus_bad_decl_out;
	uint8_t magStateResetRequest_out;
};

=============== AP_LOGGER_H====================

void Write_controlMagYawReset800(float outputDataNew_quat_q1_out,float outputDataNew_quat_q2_out,float outputDataNew_quat_q3_out,float outputDataNew_quat_q4_out,float outputDataDelayed_quat_q1_out,float outputDataDelayed_quat_q2_out,float outputDataDelayed_quat_q3_out,float outputDataDelayed_quat_q4_out,uint8_t magYawResetRequest_out,uint8_t yawAlignComplete_out,uint8_t finalInflightYawInit_out,uint8_t finalInflightMagInit_out);


void Write_controlMagYawReset801(uint8_t gpsYawResetRequest,int32_t lastYawReset_ms_out,float yawResetAngle_out,uint8_t faultStatus_bad_decl,uint8_t faultStatus_bad_decl_out,uint8_t magStateResetRequest_out);


===============LOG_STRUCTURE.H=======================
NAO ESQUECER O SHOULD_LOG_EKF!!!!!

LOG_C800,
LOG_C801,
LOG_C800_BASE(LOG_C800),\
LOG_C801_BASE(LOG_C801),\


===============LOG_FILE_CPP====================

void AP_Logger::Write_controlMagYawReset800(
	float outputDataNew_quat_q1_out,
	float outputDataNew_quat_q2_out,
	float outputDataNew_quat_q3_out,
	float outputDataNew_quat_q4_out,
	float outputDataDelayed_quat_q1_out,
	float outputDataDelayed_quat_q2_out,
	float outputDataDelayed_quat_q3_out,
	float outputDataDelayed_quat_q4_out,
	uint8_t magYawResetRequest_out,
	uint8_t yawAlignComplete_out,
	uint8_t finalInflightYawInit_out,
	uint8_t finalInflightMagInit_out)
{
	struct log_C800 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_C800),
		time_us : AP_HAL::micros64(),
		outputDataNew_quat_q1_out : outputDataNew_quat_q1_out,
		outputDataNew_quat_q2_out : outputDataNew_quat_q2_out,
		outputDataNew_quat_q3_out : outputDataNew_quat_q3_out,
		outputDataNew_quat_q4_out : outputDataNew_quat_q4_out,
		outputDataDelayed_quat_q1_out : outputDataDelayed_quat_q1_out,
		outputDataDelayed_quat_q2_out : outputDataDelayed_quat_q2_out,
		outputDataDelayed_quat_q3_out : outputDataDelayed_quat_q3_out,
		outputDataDelayed_quat_q4_out : outputDataDelayed_quat_q4_out,
		magYawResetRequest_out : magYawResetRequest_out,
		yawAlignComplete_out : yawAlignComplete_out,
		finalInflightYawInit_out : finalInflightYawInit_out,
		finalInflightMagInit_out : finalInflightMagInit_out
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

void AP_Logger::Write_controlMagYawReset801(
	uint8_t gpsYawResetRequest,
	int32_t lastYawReset_ms_out,
	float yawResetAngle_out,
	uint8_t faultStatus_bad_decl,
	uint8_t faultStatus_bad_decl_out,
	uint8_t magStateResetRequest_out)
{
	struct log_C801 pkt = {
		LOG_PACKET_HEADER_INIT(LOG_C801),
		time_us : AP_HAL::micros64(),
		gpsYawResetRequest : gpsYawResetRequest,
		lastYawReset_ms_out : lastYawReset_ms_out,
		yawResetAngle_out : yawResetAngle_out,
		faultStatus_bad_decl : faultStatus_bad_decl,
		faultStatus_bad_decl_out : faultStatus_bad_decl_out,
		magStateResetRequest_out : magStateResetRequest_out
	};
	WriteBlock(&pkt, sizeof(pkt));
} 

--------------------------------------------------------------


PARTE DO MATLAB, ALIMENTAR O WORKSPACE COM VARIAVEIS LOGADAS CONVERT_MODELO_LOGS.M

	C800_time = 1e-6*C800(:,2);
	outputDataNew_quat_q1_out = [C800_time, C800(:,3)];
	outputDataNew_quat_q2_out = [C800_time, C800(:,4)];
	outputDataNew_quat_q3_out = [C800_time, C800(:,5)];
	outputDataNew_quat_q4_out = [C800_time, C800(:,6)];
	outputDataDelayed_quat_q1_out = [C800_time, C800(:,7)];
	outputDataDelayed_quat_q2_out = [C800_time, C800(:,8)];
	outputDataDelayed_quat_q3_out = [C800_time, C800(:,9)];
	outputDataDelayed_quat_q4_out = [C800_time, C800(:,10)];
	magYawResetRequest_out = [C800_time, C800(:,11)];
	yawAlignComplete_out = [C800_time, C800(:,12)];
	finalInflightYawInit_out = [C800_time, C800(:,13)];
	finalInflightMagInit_out = [C800_time, C800(:,14)];


	C801_time = 1e-6*C801(:,2);
	gpsYawResetRequest = [C801_time, C801(:,3)];
	lastYawReset_ms_out = [C801_time, C801(:,4)];
	yawResetAngle_out = [C801_time, C801(:,5)];
	faultStatus_bad_decl = [C801_time, C801(:,6)];
	faultStatus_bad_decl_out = [C801_time, C801(:,7)];
	magStateResetRequest_out = [C801_time, C801(:,8)];


